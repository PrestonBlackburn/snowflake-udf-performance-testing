QUERY_ID,TOTAL_ELAPSED_TIME,COMPILATION_TIME,EXECUTION_TIME,ROWS_PRODUCED,WAREHOUSE_NAME,QUERY_TEXT
01a7e8b0-0001-82ae-0000-0004f18744bd,-1666877818195,23,0,0,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 5000)) order by start_time desc"
01a7e894-0001-82b4-0000-0004f187353d,152142,194,20468,10000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e894-0001-82b4-0000-0004f1873539,131718,179,8774,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e894-0001-82b4-0000-0004f1873535,128185,176,1138,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e894-0001-82b4-0000-0004f187352d,129180,194,2213,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e894-0001-82b4-0000-0004f1873529,204438,200,76080,10000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e894-0001-82b4-0000-0004f1873525,128382,198,11607,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e894-0001-82b4-0000-0004f1873521,116833,228,874,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e894-0001-82ae-0000-0004f1874495,122220,134,1127,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e894-0001-82ae-0000-0004f187448d,222594,182,114029,10000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e894-0001-82ae-0000-0004f1874489,125308,181,16653,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e894-0001-82ae-0000-0004f1874485,112789,192,2226,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e894-0001-82ae-0000-0004f1874481,112644,192,1543,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e894-0001-82b4-0000-0004f1873509,189253,200,76100,10000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82ae-0000-0004f187447d,118427,161,9412,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82b4-0000-0004f18734fd,109054,140,1099,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82b4-0000-0004f18734f9,108006,178,1373,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e893-0001-82ae-0000-0004f1874479,220820,168,116949,10000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82b4-0000-0004f18734f5,117564,168,26420,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82ae-0000-0004f1874475,91179,174,4222,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82ae-0000-0004f1874471,86998,169,1100,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e893-0001-82ae-0000-0004f187446d,45,33,12,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e893-0001-82b4-0000-0004f18734f1,481905,158,78776,10000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82b4-0000-0004f18734ed,405314,189,15834,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82b4-0000-0004f18734e5,402732,165,2884,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82b4-0000-0004f18734dd,401952,205,2849,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e893-0001-82b4-0000-0004f18734d1,477701,234,84565,10000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82ae-0000-0004f1874455,405412,188,10310,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82b4-0000-0004f18734cd,396265,169,2368,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82ae-0000-0004f1874451,393917,140,2039,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e893-0001-82ae-0000-0004f187444d,501867,166,139087,10000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82b4-0000-0004f18734c9,362797,163,16351,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82b4-0000-0004f18734c5,346469,173,2766,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82ae-0000-0004f1874449,346815,173,2450,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e893-0001-82b4-0000-0004f18734b9,399909,160,75979,10000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82b4-0000-0004f18734b5,323951,188,9610,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82ae-0000-0004f1874445,314691,225,2250,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82ae-0000-0004f1874441,312441,169,1923,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e893-0001-82b4-0000-0004f18734ad,899943,276,613462,10000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82ae-0000-0004f1874439,403309,195,117207,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82b4-0000-0004f18734a9,289565,158,5553,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82ae-0000-0004f1874435,284045,163,2738,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e893-0001-82ae-0000-0004f1874431,35,25,10,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e893-0001-82b4-0000-0004f18734a1,140921,180,23803,10000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82ae-0000-0004f187442d,117159,238,9165,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82b4-0000-0004f1873491,114222,175,1706,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82b4-0000-0004f187348d,112570,161,1155,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e893-0001-82b4-0000-0004f1873485,201089,185,84972,10000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82b4-0000-0004f1873481,119229,183,11417,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82b4-0000-0004f187347d,107859,197,1555,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82ae-0000-0004f187441d,109399,151,1917,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e893-0001-82b4-0000-0004f1873471,236883,193,135494,10000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e893-0001-82b4-0000-0004f187346d,110717,163,18000,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e893-0001-82ae-0000-0004f1874419,92754,182,2448,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e893-0001-82ae-0000-0004f1874415,90344,164,2261,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e892-0001-82ae-0000-0004f187440d,176181,172,77803,10000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e892-0001-82b4-0000-0004f1873465,99321,185,9873,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e892-0001-82b4-0000-0004f1873461,89488,185,1812,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e892-0001-82b4-0000-0004f187345d,87712,170,1422,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e892-0001-82b4-0000-0004f1873459,274194,236,199608,10000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e892-0001-82b4-0000-0004f1873455,98636,179,27123,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e892-0001-82ae-0000-0004f1874409,74661,197,4058,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e892-0001-82ae-0000-0004f1874401,72698,181,1829,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e892-0001-82ae-0000-0004f18743fd,40,28,12,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e892-0001-82b4-0000-0004f1873451,389896,239,86689,10000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e892-0001-82ae-0000-0004f18743f1,319702,222,16481,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e892-0001-82b4-0000-0004f187344d,304359,242,3082,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e892-0001-82ae-0000-0004f18743e1,321530,203,2916,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e892-0001-82ae-0000-0004f18743d9,376712,277,86838,10000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e892-0001-82ae-0000-0004f18743d1,293938,266,11568,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e892-0001-82ae-0000-0004f18743cd,282358,170,2147,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e892-0001-82ae-0000-0004f18743c9,280239,200,2081,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e892-0001-82ae-0000-0004f18743c5,351459,184,75485,10000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e892-0001-82b4-0000-0004f1873441,276014,272,14962,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e892-0001-82b4-0000-0004f1873435,265170,206,3046,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e892-0001-82ae-0000-0004f18743c1,262164,206,3127,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e892-0001-82ae-0000-0004f18743bd,329438,198,78626,10000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e892-0001-82b4-0000-0004f1873431,250839,270,9553,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e892-0001-82b4-0000-0004f187342d,241286,201,2165,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e892-0001-82ae-0000-0004f18743b9,242237,238,2057,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e892-0001-82ae-0000-0004f18743b5,962686,208,738548,10000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e892-0001-82b4-0000-0004f1873425,337743,230,114197,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e892-0001-82ae-0000-0004f18743b1,224200,200,5361,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e892-0001-82b4-0000-0004f187341d,221917,210,2430,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e892-0001-82b4-0000-0004f1873419,41,30,11,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e892-0001-82ae-0000-0004f18743a9,134864,135,24941,10000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f187340d,119374,211,8262,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f1873405,113203,142,1923,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f18743a1,111325,140,1866,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f187439d,190614,190,90222,10000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f1873401,109555,140,10916,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f1874399,98675,118,1002,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f18733fd,97721,171,871,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f187438d,118655,144,22136,10000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f1874389,104775,149,8243,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f18733f9,96616,148,1741,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f1874385,94902,156,1626,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f1874381,170417,162,79465,10000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f187437d,93367,144,10159,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f1874379,83247,156,2135,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f18733f5,81143,157,1487,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f18733f1,304187,145,232869,10000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f18733ed,96938,138,25921,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f1874375,71416,155,3900,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f18733e9,67555,153,1515,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f1874371,39,27,12,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e891-0001-82b4-0000-0004f18733e5,305849,204,81970,10000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f187436d,228029,138,15646,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f1874369,212424,152,3318,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f18733d1,211279,193,2616,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f1874365,287799,166,89605,10000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f1874361,215921,172,11306,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f18733c5,204627,157,2116,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f18733c1,202557,196,1906,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f18733bd,273046,194,73485,10000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f18733b9,199583,175,13699,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f187435d,185910,181,2793,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f1874359,183117,211,2701,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f1874355,256501,206,77694,10000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f1874351,178783,176,9598,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f18733b5,169177,150,2173,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f18733b1,167039,173,1729,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f187434d,966009,149,819773,10000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f1874349,249555,143,107908,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f18733ad,146334,186,5684,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f1874345,141751,205,2541,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f1874341,37,26,11,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e891-0001-82ae-0000-0004f187433d,94575,134,22846,10000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f1874339,80800,131,9276,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f1874335,71823,128,2376,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f1874331,71613,125,2247,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f187432d,144228,129,85775,10000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f1874329,69466,179,11805,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f18733a9,58552,147,1156,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f1874325,57421,156,1216,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f18733a5,69741,133,19671,10000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f18733a1,57838,139,8681,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f187339d,50163,173,2122,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f1873399,39659,156,2401,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f1874321,116904,251,77174,10000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f187431d,48168,290,10253,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f1874319,38082,272,1636,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f1873395,37577,147,1812,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873391,264618,161,229716,10000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f187338d,56833,148,22196,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f1873389,34976,156,2564,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f1873385,32454,171,2029,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873381,39,27,12,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e891-0001-82b4-0000-0004f187337d,207475,140,79878,10000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f1873379,140550,152,15856,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f1873375,124734,171,2927,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f1873371,121845,167,2826,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f1874315,202787,179,87245,10000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f187336d,127835,219,11048,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f1873369,116818,220,2187,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f1874311,114624,184,1817,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873365,182524,242,73180,10000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f187430d,115750,176,15011,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f1873361,109327,233,2858,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f1874309,100812,131,2834,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f187335d,167465,223,77921,10000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f1873359,98066,152,9959,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f1873355,88144,175,2263,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f1874305,85903,202,2114,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f1874301,926020,192,875770,10000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f1873351,142893,162,110755,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f187334d,50301,258,5172,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f18742fd,32223,156,3082,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873349,41,26,15,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e891-0001-82b4-0000-0004f1873345,51023,194,21404,10000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f1873341,37968,164,8646,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f187333d,29700,181,6363,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f18742f9,29400,132,9692,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873339,108556,151,88876,10000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f18742f5,31891,168,12567,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f18742f1,19854,153,2057,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f18742ed,19422,172,1821,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f18742e9,37592,155,20039,10000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f1873335,23674,150,7658,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f1873331,17987,290,9167,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f187332d,17794,210,9595,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873329,88770,491,88293,10000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f1873325,16207,260,15985,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f18742e5,8299,483,7840,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f1873321,8943,527,8436,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f18742e1,231176,389,230809,10000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f18742dd,36821,631,36210,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f18742d9,20378,462,19909,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f187331d,18098,619,17574,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873319,37,25,12,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e891-0001-82ae-0000-0004f18742d5,114605,197,84494,10000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f18742d1,46410,223,16181,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f18742cd,30175,161,3706,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f18742c9,30226,207,10453,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873315,108347,199,88710,10000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f18742c5,30604,170,11200,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f1873311,19883,195,2219,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f187330d,19765,269,2266,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873309,91491,189,74078,10000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f18742c1,26809,173,11242,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f1873305,17907,200,8748,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f18742bd,17684,248,8777,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f1873301,85851,346,85537,10000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82ae-0000-0004f18742b9,15826,750,15082,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82ae-0000-0004f18742b5,9353,454,8919,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82ae-0000-0004f18742b1,9089,860,8249,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82ae-0000-0004f18742ad,903445,588,902881,10000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000000
01a7e891-0001-82b4-0000-0004f18732fd,122018,889,121212,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e891-0001-82b4-0000-0004f18732f9,20158,830,19442,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e891-0001-82b4-0000-0004f18732f5,18078,809,17385,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e891-0001-82b4-0000-0004f18732f1,97,83,14,0,COMPUTE_WH,use warehouse SMALL_TEST_WH
01a7e674-0001-82ae-0000-0004f1874299,1818,1111,729,1,COMPUTE_WH,"with active_contracts as (
  select contract_number, max(expiration_date) t1, max(end_date) t2
  from SNOWFLAKE.ORGANIZATION_USAGE.CONTRACT_ITEMS
  group by contract_number
  having t1 >= current_date() or (t2 > current_date() and t1 is null)
),
capacity_balances as (
select 
  contract_number, 
  date,
  capacity_balance,
  row_number() over (partition by contract_number order by date desc) as row_num,
  currency
from SNOWFLAKE.ORGANIZATION_USAGE.REMAINING_BALANCE_DAILY
where contract_number in (select contract_number from active_contracts)
)
select sum(capacity_balance) as balance, any_value(currency) as currency
from capacity_balances
where row_num = 1;"
01a7e66e-0001-82b4-0000-0004f18732dd,1294,499,861,1035,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 5000)) order by start_time desc"
01a7e66e-0001-82b4-0000-0004f18732d5,54,52,2,0,,select SYSTEM$CANCEL_ALL_QUERIES( 21232054285 );
01a7e665-0001-82ae-0000-0004f1874289,703,627,98,1,COMPUTE_WH,"with active_contracts as (
  select contract_number, max(expiration_date) t1, max(end_date) t2
  from SNOWFLAKE.ORGANIZATION_USAGE.CONTRACT_ITEMS
  group by contract_number
  having t1 >= current_date() or (t2 > current_date() and t1 is null)
),
capacity_balances as (
select 
  contract_number, 
  date,
  capacity_balance,
  row_number() over (partition by contract_number order by date desc) as row_num,
  currency
from SNOWFLAKE.ORGANIZATION_USAGE.REMAINING_BALANCE_DAILY
where contract_number in (select contract_number from active_contracts)
)
select sum(capacity_balance) as balance, any_value(currency) as currency
from capacity_balances
where row_num = 1;"
01a7e665-0001-82b4-0000-0004f18732b1,4396,3859,585,1,COMPUTE_WH,"with active_contracts as (
  select contract_number, max(expiration_date) t1, max(end_date) t2
  from SNOWFLAKE.ORGANIZATION_USAGE.CONTRACT_ITEMS
  group by contract_number
  having t1 >= current_date() or (t2 > current_date() and t1 is null)
),
capacity_balances as (
select 
  contract_number, 
  date,
  capacity_balance,
  row_number() over (partition by contract_number order by date desc) as row_num,
  currency
from SNOWFLAKE.ORGANIZATION_USAGE.REMAINING_BALANCE_DAILY
where contract_number in (select contract_number from active_contracts)
)
select sum(capacity_balance) as balance, any_value(currency) as currency
from capacity_balances
where row_num = 1;"
01a7e663-0001-82b4-0000-0004f187328d,637620,174,581257,33836160,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82ae-0000-0004f1874269,82869,185,28088,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82ae-0000-0004f1874265,59719,181,5087,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82b4-0000-0004f1873289,56488,152,2494,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82b4-0000-0004f1873285,38,25,13,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e663-0001-82ae-0000-0004f1874261,637916,163,504944,7175040,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82b4-0000-0004f1873281,221194,180,88731,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82ae-0000-0004f187425d,135372,353,4953,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82ae-0000-0004f1874259,133086,215,2852,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82b4-0000-0004f187327d,44,32,12,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e663-0001-82ae-0000-0004f1874255,638234,162,613805,35163840,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82b4-0000-0004f1873279,57841,194,34338,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82ae-0000-0004f1874251,23540,136,4859,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82b4-0000-0004f1873275,24573,207,2583,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82ae-0000-0004f187424d,34,24,10,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e663-0001-82ae-0000-0004f1874249,638530,131,613146,8292480,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82b4-0000-0004f1873271,137700,181,117258,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82ae-0000-0004f1874245,25477,178,5244,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82b4-0000-0004f187326d,20551,192,2674,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82ae-0000-0004f1874241,39,27,12,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e663-0001-82b4-0000-0004f1873269,638846,181,620555,35212800,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82ae-0000-0004f187423d,55746,135,37839,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82b4-0000-0004f1873265,22559,169,4866,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82ae-0000-0004f1874239,17733,125,2214,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82b4-0000-0004f1873261,37,26,11,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e663-0001-82b4-0000-0004f187325d,639140,874,625153,8347200,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82ae-0000-0004f1874235,133682,153,120408,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82b4-0000-0004f1873259,20831,812,6960,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82ae-0000-0004f1874231,18490,183,5460,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82b4-0000-0004f1873255,41,28,13,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e663-0001-82ae-0000-0004f187422d,639489,169,639326,34919040,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82b4-0000-0004f1873251,56586,150,56446,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82ae-0000-0004f1874229,19925,203,19740,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82b4-0000-0004f187324d,16127,156,15995,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82ae-0000-0004f1874225,36,25,11,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e663-0001-82b4-0000-0004f1873249,639740,144,639612,8356800,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82ae-0000-0004f1874221,131887,2397,129510,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82b4-0000-0004f1873245,13974,193,13793,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82b4-0000-0004f1873241,13578,178,13426,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82ae-0000-0004f187421d,36,25,11,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e663-0001-82ae-0000-0004f1874219,640087,464,639627,35317440,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82b4-0000-0004f187323d,56317,433,55838,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82ae-0000-0004f1874215,19174,503,18606,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82b4-0000-0004f1873239,19664,674,19083,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82b4-0000-0004f1873235,37,25,12,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e663-0001-82b4-0000-0004f1873231,640350,370,639994,8413440,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e663-0001-82ae-0000-0004f1874211,132698,3090,129611,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e663-0001-82b4-0000-0004f187322d,14627,655,14068,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e663-0001-82ae-0000-0004f187420d,14551,3167,11335,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e663-0001-82b4-0000-0004f1873229,71,59,12,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e660-0001-82b4-0000-0004f1873225,1299,516,887,981,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 5000)) order by start_time desc"
01a7e641-0001-82b4-0000-0004f1873221,23321,246,19527,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82ae-0000-0004f1874201,8184,320,4726,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82b4-0000-0004f187321d,5601,280,2811,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82ae-0000-0004f18741fd,39,28,11,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e641-0001-82b4-0000-0004f1873219,74022,187,70612,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82b4-0000-0004f1873215,8345,203,5433,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82b4-0000-0004f1873211,5289,183,2525,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82ae-0000-0004f18741f9,34,24,10,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e641-0001-82ae-0000-0004f18741f5,23544,248,21123,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82b4-0000-0004f187320d,6420,218,4626,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82b4-0000-0004f1873209,3805,211,2070,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82ae-0000-0004f18741f1,32,22,10,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e641-0001-82ae-0000-0004f18741ed,74208,246,71889,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82b4-0000-0004f1873205,6555,212,4941,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82ae-0000-0004f18741e9,3415,159,2336,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82b4-0000-0004f1873201,38,24,14,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e641-0001-82ae-0000-0004f18741e5,22907,219,22349,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82ae-0000-0004f18741e1,4713,166,4553,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82b4-0000-0004f18731fd,2269,206,2081,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82b4-0000-0004f18731f9,38,26,12,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e641-0001-82b4-0000-0004f18731f5,74035,199,73730,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82ae-0000-0004f18741dd,4439,143,4304,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82ae-0000-0004f18741d9,2118,127,1999,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82b4-0000-0004f18731f1,37,26,11,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e641-0001-82b4-0000-0004f18731ed,21936,167,21779,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82ae-0000-0004f18741d5,4078,272,3814,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82ae-0000-0004f18741d1,2659,172,2493,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82ae-0000-0004f18741cd,37,26,11,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e641-0001-82b4-0000-0004f18731e9,74453,172,74291,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82ae-0000-0004f18741c9,4173,166,4013,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82ae-0000-0004f18741c5,2035,146,1897,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82ae-0000-0004f18741c1,37,24,13,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e641-0001-82ae-0000-0004f18741bd,22055,435,21634,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82b4-0000-0004f18731e5,3835,316,3531,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82b4-0000-0004f18731e1,1611,372,1255,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82ae-0000-0004f18741b9,34,23,11,0,SMALL_TEST_WH,use warehouse LARGE_TEST_WH
01a7e641-0001-82ae-0000-0004f18741b5,73859,397,73476,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e641-0001-82b4-0000-0004f18731dd,3740,154,3596,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e641-0001-82b4-0000-0004f18731d9,1366,202,1182,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e641-0001-82ae-0000-0004f18741b1,55,43,12,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e640-0001-82ae-0000-0004f18741a9,82,80,2,0,,select SYSTEM$CANCEL_ALL_QUERIES( 21232054285 );
01a7e640-0001-82b4-0000-0004f18731d5,30,30,0,0,,"SYSTEM$CANCEL_ALL_QUERIES( ""21232054285"" );"
01a7e611-0001-82ae-0000-0004f1874161,2840479,149,3,0,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f187319d,2840527,225,4,0,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f187415d,2840585,174,1,0,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f1873199,2840646,179,2,0,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f1874159,36,24,12,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82ae-0000-0004f1874155,2840794,125,3,0,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873195,2840846,166,3,0,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874151,2840901,156,1,0,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f1873191,2841376,608,1,0,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f187318d,59,46,13,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82ae-0000-0004f187414d,2844152,118,3,0,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873185,2844589,512,4,0,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874149,2844265,152,1,0,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f187317d,2846146,908,1,0,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f1874145,36,24,12,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e611-0001-82b4-0000-0004f1873179,2845577,139,3,0,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f1874141,2845635,148,2,0,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f187413d,2847759,170,1,0,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f1874139,2847813,161,2,0,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f1874135,37,25,12,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82ae-0000-0004f1874131,2847934,126,3,0,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873171,2848785,923,3,0,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f187316d,2848463,550,1,0,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f1873169,2848671,698,2,0,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f187412d,34,24,10,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82ae-0000-0004f1874129,2848232,147,2,0,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f1874125,2848283,153,3,0,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874121,2848337,165,2,0,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f1873165,2848782,532,1,0,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f187411d,37,25,12,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e611-0001-82ae-0000-0004f1874119,2848564,172,2674424,91162560,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873161,174196,233,40148,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874115,145281,169,5167,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f1873155,140135,143,4477,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f1873151,35,25,10,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82b4-0000-0004f187314d,2860084,144,2560788,44575680,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873149,299341,209,70797,1000000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874111,228571,140,6234,10000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f187410d,222374,147,3295,100,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f1873145,36,26,10,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82b4-0000-0004f1873141,2860388,150,2352366,20935680,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f187313d,508058,227,121862,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874109,386155,236,5291,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f1874105,380806,180,2820,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f1874101,35,25,10,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e611-0001-82ae-0000-0004f18740fd,2860693,151,2764189,93228480,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873139,136467,176,41780,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f1873135,94728,176,5454,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f18740f9,89301,229,3183,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f18740f5,36,25,11,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82b4-0000-0004f1873131,2861022,152,2707054,47561280,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f18740f1,219891,155,67534,1000000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f18740ed,152385,151,5863,10000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f187312d,146559,201,3120,100,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f1873129,37,26,11,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82ae-0000-0004f18740e9,2861271,181,2601131,23041920,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873125,378765,214,123446,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f1873121,260192,162,5903,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f18740e5,254329,162,3009,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f18740e1,42,29,13,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e611-0001-82b4-0000-0004f187311d,2861659,156,2798685,94850880,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873119,97451,141,39546,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f1873115,63064,167,5908,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f18740dd,58011,141,2566,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f18740d9,43,31,12,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82ae-0000-0004f18740d5,2861916,157,2773412,48692160,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873111,154940,143,68342,1000000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f187310d,88587,223,4961,10000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f18740d1,83653,181,2612,100,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f1873109,36,25,11,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82ae-0000-0004f18740cd,2862201,165,2721207,24139200,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f18740c9,256177,153,118818,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f1873105,141058,140,5100,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f1873101,136006,292,2588,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f18730fd,43,33,10,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e611-0001-82ae-0000-0004f18740c5,2862541,144,2809184,96068160,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f18740c1,87803,165,36781,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f18740bd,58047,208,5644,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f18730f9,53495,167,5059,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f18730f5,38,25,13,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82ae-0000-0004f18740b9,2862818,212,2783414,48639360,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f18740b5,145135,219,66366,1000000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f18740b1,81835,169,5571,10000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f18730f1,76291,170,2818,100,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f18740ad,38,28,10,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82ae-0000-0004f18740a9,2863123,173,2731861,24484800,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f18730ed,252999,193,123205,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f18730e9,134160,166,4967,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f18740a5,131404,153,2212,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f18740a1,41,28,13,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e611-0001-82b4-0000-0004f18730e5,2863498,169,2836177,98252160,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f187409d,57138,136,34586,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f18730e1,27402,153,5200,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f1874099,22244,143,2603,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f18730dd,37,26,11,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82ae-0000-0004f1874095,2863744,162,2836395,49736640,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f18730d9,88417,213,65212,1000000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874091,27426,166,5437,10000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f18730d5,23245,159,2718,100,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f187408d,42,30,12,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82b4-0000-0004f18730d1,2864093,141,2842763,25306560,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f1874089,139174,137,120332,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874085,21419,138,5240,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f18730cd,16226,185,2334,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f1874081,35,25,10,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e611-0001-82ae-0000-0004f187407d,2864383,162,2844440,96215040,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f1874079,54170,142,36033,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f18730c9,23530,155,5331,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f18730c5,20096,145,2443,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f1874075,36,24,12,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82ae-0000-0004f1874071,2864672,175,2846597,50037120,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f18730c1,81228,158,64430,1000000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f18730bd,22893,137,6097,10000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f18730b9,18197,145,3382,100,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f18730b5,38,26,12,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82b4-0000-0004f18730b1,2865001,141,2851783,25291200,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f18730ad,130945,158,117789,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f187406d,19794,270,5126,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f1874069,14716,155,3830,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f1874065,38,27,11,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e611-0001-82b4-0000-0004f18730a9,2865333,175,2865168,97485120,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f18730a5,53739,154,53593,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f18730a1,18492,172,18342,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f1874061,19151,333,18840,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f187405d,39,28,11,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82b4-0000-0004f187309d,2865635,151,2865494,50483520,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873099,76098,166,75950,1000000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874059,17767,212,17573,10000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f1873095,15734,210,15550,100,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f1873091,37,26,11,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82ae-0000-0004f1874055,2865883,132,2865761,25553280,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f1874051,132526,139,132391,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f187308d,14132,162,13988,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f187404d,15708,182,15544,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f1874049,39,26,13,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7e611-0001-82b4-0000-0004f1873089,2866271,446,2865785,98319360,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f1873085,51998,476,51455,1000000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82ae-0000-0004f1874045,22337,613,21738,10000,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f1874041,20061,733,19410,100,LARGE_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f187403d,38,25,13,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7e611-0001-82b4-0000-0004f1873081,2866540,522,2866012,50232000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82b4-0000-0004f187307d,82358,556,81779,1000000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f1873079,23210,752,22447,10000,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82ae-0000-0004f1874039,18679,762,17995,100,MEDIUM_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82b4-0000-0004f1873075,35,24,11,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7e611-0001-82b4-0000-0004f1873071,2866831,455,2866361,25204800,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100000000
01a7e611-0001-82ae-0000-0004f1874035,132728,420,132301,1000000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 1000000
01a7e611-0001-82b4-0000-0004f187306d,15147,515,14659,10000,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10000
01a7e611-0001-82b4-0000-0004f1873069,12707,645,12168,100,SMALL_TEST_WH,select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 100
01a7e611-0001-82ae-0000-0004f1874031,48,38,10,0,COMPUTE_WH,use warehouse SMALL_TEST_WH
01a7e60f-0001-82b4-0000-0004f1873065,911,191,730,10,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10) LIMIT 10 OFFSET 0
01a7e60f-0001-82b4-0000-0004f1873061,2664,181,2491,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION ADD_ROWS_SIMPLE_WITH_PANDAS(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/852e58ab14afd374bfd230085276f1d5645bacfb5a8924e3e84c003352d2c1f6/add_rows_simple_with_pandas.py.zip')
PACKAGES=('pandas','numpy','cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('8005952d020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b024b004b004b034b034b43430e74007c007c0183027d027c025300944e85948c1b6164645f726f77735f73696d706c655f776974685f70616e6461739485948c0141948c0142948c0873756d5f726f77739487948c3f433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f383231325c3439393039323436382e7079948c1773665f6164645f726f77735f776974685f70616e646173944b044304000b0a02942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681b7d947d9428681868128c0c5f5f7175616c6e616d655f5f9468128c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468198c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from add_rows_simple_with_pandas import add_rows_simple_with_pandas
# @udf(name = ""ADD_ROWS_SIMPLE_WITH_PANDAS"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""add_rows_simple_with_pandas.py"", ""add_rows_simple_with_pandas"")],
#      packages = [""pandas"", ""numpy""],
#      session = session)
#
# def sf_add_rows_with_pandas(A: float,
#                             B: float) -> int:
#
#     sum_rows = add_rows_simple_with_pandas(A, B)
#
#     return sum_rows
#
# func = sf_add_rows_with_pandas


from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(arg1,arg2):
    return lock_function_once(func, invoked)(arg1,arg2)
$$"
01a7e60f-0001-82b4-0000-0004f187305d,570,81,491,2,COMPUTE_WH,"SELECT ""PACKAGE_NAME"", array_agg(""VERSION"") AS ""ARRAY_AGG(VERSION)"" FROM ( SELECT  *  FROM ( SELECT  *  FROM (information_schema.packages)) WHERE ((""LANGUAGE"" = 'python') AND ""PACKAGE_NAME"" IN ('pandas', 'numpy'))) GROUP BY ""PACKAGE_NAME"""
01a7e60f-0001-82ae-0000-0004f1874029,252,60,201,9,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7e60f-0001-82b4-0000-0004f1873059')))"
01a7e60f-0001-82b4-0000-0004f1873059,96,31,65,0,COMPUTE_WH,ls '@snowpark_functions'
01a7e60e-0001-82ae-0000-0004f1874025,1324,417,917,0,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10) LIMIT 10 OFFSET 0
01a7e60e-0001-82ae-0000-0004f1874021,2628,182,2452,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION ADD_ROWS_SIMPLE_WITH_PANDAS(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/852e58ab14afd374bfd230085276f1d5645bacfb5a8924e3e84c003352d2c1f6/add_rows_simple_with_pandas.py.zip')
PACKAGES=('pandas','numpy','cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059533020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b024b004b004b034b024b43430c7400740183017d027c025300944e85948c1b6164645f726f77735f73696d706c655f776974685f70616e646173948c0264669486948c0141948c0142948c0a73756d5f766563746f729487948c40433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f383231325c333937323334303833372e7079948c1773665f6164645f726f77735f776974685f70616e646173944b044304000b0802942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681c7d947d9428681968138c0c5f5f7175616c6e616d655f5f9468138c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f94681a8c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from add_rows_simple_with_pandas import add_rows_simple_with_pandas
# @udf(name = ""ADD_ROWS_SIMPLE_WITH_PANDAS"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""add_rows_simple_with_pandas.py"", ""add_rows_simple_with_pandas"")],
#      packages = [""pandas"", ""numpy""],
#      session = session)
#
# def sf_add_rows_with_pandas(A: float,
#                             B: float) -> int:
#
#     sum_vector = add_rows_simple_with_pandas(df)
#
#     return sum_vector
#
# func = sf_add_rows_with_pandas


from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(arg1,arg2):
    return lock_function_once(func, invoked)(arg1,arg2)
$$"
01a7e60e-0001-82b4-0000-0004f1873055,504,97,421,2,COMPUTE_WH,"SELECT ""PACKAGE_NAME"", array_agg(""VERSION"") AS ""ARRAY_AGG(VERSION)"" FROM ( SELECT  *  FROM ( SELECT  *  FROM (information_schema.packages)) WHERE ((""LANGUAGE"" = 'python') AND ""PACKAGE_NAME"" IN ('pandas', 'numpy'))) GROUP BY ""PACKAGE_NAME"""
01a7e60e-0001-82ae-0000-0004f187401d,383,213,181,9,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7e60e-0001-82ae-0000-0004f1874019')))"
01a7e60e-0001-82ae-0000-0004f1874019,107,47,60,0,COMPUTE_WH,ls '@snowpark_functions'
01a7e60c-0001-82b4-0000-0004f187304d,1088,178,932,0,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10) LIMIT 10 OFFSET 0
01a7e60c-0001-82ae-0000-0004f1874015,16966,307,16671,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION ADD_ROWS_SIMPLE_WITH_PANDAS(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/852e58ab14afd374bfd230085276f1d5645bacfb5a8924e3e84c003352d2c1f6/add_rows_simple_with_pandas.py.zip')
PACKAGES=('pandas','numpy','cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059522020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b014b004b004b024b024b43430c74007c0083017d017c015300944e85948c1b6164645f726f77735f73696d706c655f776974685f70616e6461739485948c026466948c0a73756d5f766563746f729486948c40433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f383231325c313630333633313134392e7079948c1773665f6164645f726f77735f776974685f70616e646173944b044304000b0802942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681a7d947d9428681768118c0c5f5f7175616c6e616d655f5f9468118c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468188c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d947586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# @udf(name = ""ADD_ROWS_SIMPLE_WITH_PANDAS"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""add_rows_simple_with_pandas.py"", ""add_rows_simple_with_pandas"")],
#      packages = [""pandas"", ""numpy""],
#      session = session,
#      max_batch_size = 1000000)
#
# def sf_add_rows_with_pandas(df: PandasDataFrame[float, float]) -> PandasSeries[int]:
#
#     sum_vector = add_rows_simple_with_pandas(df)
#
#     return sum_vector
#
# func = sf_add_rows_with_pandas



from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(df):
    return lock_function_once(func, invoked)(df)


import pandas

compute._sf_vectorized_input = pandas.DataFrame
compute._sf_max_batch_size = 1000000
$$"
01a7e60c-0001-82ae-0000-0004f1874011,783,339,464,2,COMPUTE_WH,"SELECT ""PACKAGE_NAME"", array_agg(""VERSION"") AS ""ARRAY_AGG(VERSION)"" FROM ( SELECT  *  FROM ( SELECT  *  FROM (information_schema.packages)) WHERE ((""LANGUAGE"" = 'python') AND ""PACKAGE_NAME"" IN ('pandas', 'numpy'))) GROUP BY ""PACKAGE_NAME"""
01a7e60c-0001-82ae-0000-0004f187400d,80,39,41,0,COMPUTE_WH,PUT 'file:///tmp/placeholder/add_rows_simple_with_pandas.py.zip' '@snowpark_functions/852e58ab14afd374bfd230085276f1d5645bacfb5a8924e3e84c003352d2c1f6' PARALLEL = 4 AUTO_COMPRESS = FALSE SOURCE_COMPRESSION = DEFLATE OVERWRITE = TRUE
01a7e60c-0001-82b4-0000-0004f1873045,526,458,160,8,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7e60c-0001-82b4-0000-0004f1873041')))"
01a7e60c-0001-82b4-0000-0004f1873041,100,46,54,0,COMPUTE_WH,ls '@snowpark_functions'
01a7e607-0001-82b4-0000-0004f187303d,1531,461,1088,0,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10) LIMIT 10 OFFSET 0
01a7e607-0001-82b4-0000-0004f1873039,31,31,0,0,,SELECT  *  FROM ( select add_rows_simple_with_pandas(*) from demodb.udf_testing.udf_test limit 10;) LIMIT 10 OFFSET 0
01a7e607-0001-82b4-0000-0004f1873035,2760,179,2589,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION ADD_ROWS_SIMPLE_WITH_PANDAS(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/f1259fac7c841f79ed3a193faf40ef543f0a25e1e3ad69d62f42b982033f2ee3/add_rows_simple_with_pandas.py.zip')
PACKAGES=('pandas','numpy','cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059522020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b014b004b004b024b024b43430c74007c0083017d017c015300944e85948c1b6164645f726f77735f73696d706c655f776974685f70616e6461739485948c026466948c0a73756d5f766563746f729486948c40433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f383231325c313630333633313134392e7079948c1773665f6164645f726f77735f776974685f70616e646173944b044304000b0802942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681a7d947d9428681768118c0c5f5f7175616c6e616d655f5f9468118c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468188c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d947586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# @udf(name = ""ADD_ROWS_SIMPLE_WITH_PANDAS"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""add_rows_simple_with_pandas.py"", ""add_rows_simple_with_pandas"")],
#      packages = [""pandas"", ""numpy""],
#      session = session,
#      max_batch_size = 1000000)
#
# def sf_add_rows_with_pandas(df: PandasDataFrame[float, float]) -> PandasSeries[int]:
#
#     sum_vector = add_rows_simple_with_pandas(df)
#
#     return sum_vector
#
# func = sf_add_rows_with_pandas



from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(df):
    return lock_function_once(func, invoked)(df)


import pandas

compute._sf_vectorized_input = pandas.DataFrame
compute._sf_max_batch_size = 1000000
$$"
01a7e607-0001-82b4-0000-0004f1873031,488,86,403,2,COMPUTE_WH,"SELECT ""PACKAGE_NAME"", array_agg(""VERSION"") AS ""ARRAY_AGG(VERSION)"" FROM ( SELECT  *  FROM ( SELECT  *  FROM (information_schema.packages)) WHERE ((""LANGUAGE"" = 'python') AND ""PACKAGE_NAME"" IN ('pandas', 'numpy'))) GROUP BY ""PACKAGE_NAME"""
01a7e607-0001-82b4-0000-0004f1873029,238,81,177,8,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7e607-0001-82ae-0000-0004f1874009')))"
01a7e607-0001-82ae-0000-0004f1874009,86,35,51,0,COMPUTE_WH,ls '@snowpark_functions'
01a7e606-0001-82b4-0000-0004f1873025,18570,322,18270,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION ADD_ROWS_SIMPLE_WITH_PANDAS(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/f1259fac7c841f79ed3a193faf40ef543f0a25e1e3ad69d62f42b982033f2ee3/add_rows_simple_with_pandas.py.zip')
PACKAGES=('pandas','numpy','cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059523020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b014b004b004b024b024b43430c74007c0083017d017c015300944e85948c136164645f726f77735f766563746f72697a65649485948c026466948c0a73756d5f766563746f729486948c40433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f383231325c333431313431323239392e7079948c1773665f6164645f726f77735f776974685f70616e646173944b044304000b0802942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681a7d947d9428681768118c0c5f5f7175616c6e616d655f5f9468118c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468188c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from add_rows_vectorized import add_rows_vectorized
# @udf(name = ""ADD_ROWS_SIMPLE_WITH_PANDAS"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""add_rows_simple_with_pandas.py"", ""add_rows_simple_with_pandas"")],
#      packages = [""pandas"", ""numpy""],
#      session = session,
#      max_batch_size = 1000000)
#
# def sf_add_rows_with_pandas(df: PandasDataFrame[float, float]) -> PandasSeries[int]:
#
#     sum_vector = add_rows_vectorized(df)
#
#     return sum_vector
#
# func = sf_add_rows_with_pandas



from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(df):
    return lock_function_once(func, invoked)(df)


import pandas

compute._sf_vectorized_input = pandas.DataFrame
compute._sf_max_batch_size = 1000000
$$"
01a7e606-0001-82b4-0000-0004f1873021,621,91,534,2,COMPUTE_WH,"SELECT ""PACKAGE_NAME"", array_agg(""VERSION"") AS ""ARRAY_AGG(VERSION)"" FROM ( SELECT  *  FROM ( SELECT  *  FROM (information_schema.packages)) WHERE ((""LANGUAGE"" = 'python') AND ""PACKAGE_NAME"" IN ('pandas', 'numpy'))) GROUP BY ""PACKAGE_NAME"""
01a7e606-0001-82b4-0000-0004f1873019,78,34,44,0,COMPUTE_WH,PUT 'file:///tmp/placeholder/add_rows_simple_with_pandas.py.zip' '@snowpark_functions/f1259fac7c841f79ed3a193faf40ef543f0a25e1e3ad69d62f42b982033f2ee3' PARALLEL = 4 AUTO_COMPRESS = FALSE SOURCE_COMPRESSION = DEFLATE OVERWRITE = TRUE
01a7e606-0001-82b4-0000-0004f1873015,739,593,235,7,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7e606-0001-82ae-0000-0004f1874005')))"
01a7e606-0001-82ae-0000-0004f1874005,152,88,64,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d450-0001-82ae-0000-0004f1871ac9,1211,459,773,761,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 5000)) order by start_time desc"
01a7d44c-0001-82ae-0000-0004f1871ac5,1280,551,811,760,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 5000)) order by start_time desc"
01a7d440-0001-82ad-0000-0004f1872a85,1137,499,741,759,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 5000)) order by start_time desc"
01a7d437-0001-82ad-0000-0004f1872a81,77515,136,65381,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d437-0001-82ae-0000-0004f1871ab5,26019,168,7507,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d437-0001-82ad-0000-0004f1872a79,21150,215,7371,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d437-0001-82ad-0000-0004f1872a75,21618,260,11622,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d437-0001-82ae-0000-0004f1871ab1,58927,280,48945,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d437-0001-82ae-0000-0004f1871aad,13840,238,4422,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d437-0001-82ae-0000-0004f1871aa9,9944,248,1774,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d437-0001-82ad-0000-0004f1872a71,9418,208,1474,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d437-0001-82ae-0000-0004f1871aa5,84246,253,84007,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d437-0001-82ad-0000-0004f1872a6d,27405,528,26891,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d437-0001-82ae-0000-0004f1871aa1,21385,197,21194,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d437-0001-82ad-0000-0004f1872a69,21410,637,20799,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d437-0001-82ae-0000-0004f1871a9d,47609,371,47262,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d437-0001-82ae-0000-0004f1871a99,10674,376,10273,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d437-0001-82ad-0000-0004f1872a65,8743,667,8120,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d437-0001-82ad-0000-0004f1872a61,8541,779,7859,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d437-0001-82ad-0000-0004f1872a5d,38,26,12,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d437-0001-82ae-0000-0004f1871a95,155517,117,131268,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d437-0001-82ae-0000-0004f1871a91,33766,127,9477,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d437-0001-82ad-0000-0004f1872a59,27583,156,11481,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d437-0001-82ad-0000-0004f1872a55,24395,178,10352,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d437-0001-82ad-0000-0004f1872a51,104424,293,90388,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d437-0001-82ae-0000-0004f1871a8d,16247,234,4566,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d437-0001-82ad-0000-0004f1872a4d,14136,241,3648,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d437-0001-82ae-0000-0004f1871a89,14063,280,3462,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d437-0001-82ad-0000-0004f1872a49,152689,390,152321,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d437-0001-82ae-0000-0004f1871a85,33358,268,33112,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d437-0001-82ae-0000-0004f1871a81,24734,419,24337,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d437-0001-82ae-0000-0004f1871a7d,27404,358,27062,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d437-0001-82ad-0000-0004f1872a45,87388,569,86816,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d437-0001-82ad-0000-0004f1872a41,11996,405,11532,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d437-0001-82ae-0000-0004f1871a79,10811,666,10199,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d437-0001-82ad-0000-0004f1872a3d,10882,1157,9833,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d437-0001-82ad-0000-0004f1872a39,42,24,18,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d437-0001-82ad-0000-0004f1872a35,1468797,195,322557,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d437-0001-82ae-0000-0004f1871a75,1146269,169,15922,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d437-0001-82ad-0000-0004f1872a31,1130389,210,2167,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d437-0001-82ae-0000-0004f1871a71,1128278,277,2635,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d436-0001-82ae-0000-0004f1871a45,1434592,175,409544,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d436-0001-82ae-0000-0004f1871a41,1025074,201,7386,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d436-0001-82ae-0000-0004f1871a3d,1017707,190,2278,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d432-0001-82ad-0000-0004f18729c5,1210954,182,1246,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d432-0001-82ad-0000-0004f18729c1,1719872,196,531103,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d432-0001-82ae-0000-0004f1871a25,1197953,213,14533,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d432-0001-82ae-0000-0004f1871a21,1183421,189,2951,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d432-0001-82ad-0000-0004f18729b5,1180491,196,2228,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d432-0001-82ae-0000-0004f1871a11,1605158,141,383192,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ad-0000-0004f18729a1,1246258,141,6864,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ad-0000-0004f187299d,1240497,184,1627,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ae-0000-0004f18719f9,1238874,146,1979,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ad-0000-0004f1872999,37,26,11,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d431-0001-82ad-0000-0004f1872995,88808,155,69633,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ae-0000-0004f18719ed,26937,139,7735,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ae-0000-0004f18719e9,21465,153,6414,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ad-0000-0004f1872991,21386,300,6917,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ad-0000-0004f187298d,62387,217,48611,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ae-0000-0004f18719e5,15201,255,4488,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ad-0000-0004f1872989,10653,244,1648,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ae-0000-0004f18719e1,13863,267,5237,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ae-0000-0004f18719dd,89401,177,89242,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ad-0000-0004f1872985,25256,240,25032,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ad-0000-0004f1872981,19669,288,19399,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ae-0000-0004f18719d9,19696,342,19378,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ae-0000-0004f18719d5,48087,359,47723,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ad-0000-0004f187297d,14868,743,14080,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ae-0000-0004f18719d1,9312,712,8533,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ad-0000-0004f1872979,8897,794,8197,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ae-0000-0004f18719cd,38,26,12,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d431-0001-82ae-0000-0004f18719c9,151691,155,147724,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ae-0000-0004f18719c5,12771,148,9248,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ae-0000-0004f18719c1,6305,150,2912,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ad-0000-0004f1872975,4077,133,2053,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ad-0000-0004f1872971,106821,146,104934,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ad-0000-0004f187296d,5873,180,4003,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ae-0000-0004f18719bd,3753,157,2749,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ae-0000-0004f18719b9,3616,152,2786,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ae-0000-0004f18719b5,152123,145,151984,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ad-0000-0004f1872969,10745,246,10513,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ad-0000-0004f1872965,2368,122,2256,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ad-0000-0004f1872961,2130,140,2000,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ae-0000-0004f18719b1,86373,184,86201,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ae-0000-0004f18719ad,2313,172,2149,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ae-0000-0004f18719a9,1397,179,1226,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ad-0000-0004f187295d,1232,162,1084,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ad-0000-0004f1872959,35,25,10,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d431-0001-82ad-0000-0004f1872955,1794942,167,619787,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ad-0000-0004f1872951,1175190,167,16899,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d431-0001-82ad-0000-0004f187294d,1155404,170,1931,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d431-0001-82ae-0000-0004f18719a5,1158385,237,2888,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d431-0001-82ad-0000-0004f1872945,1595659,177,477024,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d431-0001-82ad-0000-0004f1872941,1119031,227,7168,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42f-0001-82ad-0000-0004f187293d,1194432,191,2100,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d42f-0001-82ad-0000-0004f1872931,1208664,213,1303,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d42f-0001-82ad-0000-0004f187292d,1807442,213,712361,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42f-0001-82ad-0000-0004f1872929,1095113,230,15195,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42c-0001-82ae-0000-0004f187193d,1287609,158,2944,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d42c-0001-82ae-0000-0004f1871939,1284702,198,2648,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d42c-0001-82ae-0000-0004f1871935,1617630,205,392278,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42c-0001-82ae-0000-0004f1871931,1225357,194,6019,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42c-0001-82ad-0000-0004f18728fd,1219387,192,1579,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d42b-0001-82ad-0000-0004f18728f1,1245157,171,1725,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d42b-0001-82ad-0000-0004f18728ed,38,26,12,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d42b-0001-82ad-0000-0004f18728e9,68840,179,68669,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42b-0001-82ae-0000-0004f1871915,7682,145,7545,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42b-0001-82ae-0000-0004f1871911,2394,150,2250,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d42b-0001-82ad-0000-0004f18728e1,2463,155,2314,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d42b-0001-82ae-0000-0004f187190d,52524,173,52363,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42b-0001-82ad-0000-0004f18728dd,3287,135,3162,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42b-0001-82ad-0000-0004f18728d1,1527,136,1399,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d42b-0001-82ad-0000-0004f18728cd,1289,129,1168,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d42b-0001-82ae-0000-0004f1871909,72910,135,72789,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42b-0001-82ad-0000-0004f18728c1,2126,135,1999,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42b-0001-82ad-0000-0004f18728bd,1483,135,1356,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d42b-0001-82ae-0000-0004f1871905,1326,149,1183,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d42b-0001-82ae-0000-0004f1871901,35858,126,35744,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42b-0001-82ad-0000-0004f18728b5,1911,158,1763,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42b-0001-82ae-0000-0004f18718fd,734,182,560,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d42b-0001-82ad-0000-0004f18728ad,731,188,559,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d42b-0001-82ae-0000-0004f18718f9,37,27,10,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d42b-0001-82ad-0000-0004f18728a9,375161,225,180984,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42b-0001-82ad-0000-0004f18728a5,194136,201,11713,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42b-0001-82ad-0000-0004f18728a1,182453,133,2915,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d42b-0001-82ae-0000-0004f18718f5,179579,148,2008,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d42b-0001-82ae-0000-0004f18718f1,328065,161,182769,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42b-0001-82ae-0000-0004f18718ed,145322,168,4688,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42b-0001-82ad-0000-0004f187289d,140663,138,2198,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d42b-0001-82ad-0000-0004f1872899,138507,148,2067,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d42b-0001-82ad-0000-0004f1872895,364689,153,234773,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42b-0001-82ae-0000-0004f18718e9,129945,147,10801,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42b-0001-82ae-0000-0004f18718e5,119173,186,2491,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d42b-0001-82ae-0000-0004f18718e1,116707,181,1478,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d42b-0001-82ad-0000-0004f1872891,249749,160,181480,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42b-0001-82ad-0000-0004f187288d,68307,179,4178,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42b-0001-82ae-0000-0004f18718dd,64158,172,2545,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d42b-0001-82ad-0000-0004f1872889,61665,181,2072,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d42b-0001-82ad-0000-0004f1872885,39,27,12,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d42b-0001-82ad-0000-0004f1872881,2011845,224,835918,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42b-0001-82ad-0000-0004f187287d,1182114,265,15403,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42a-0001-82ad-0000-0004f1872879,1179032,199,2377,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d42a-0001-82ae-0000-0004f18718c1,1176687,161,2954,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d42a-0001-82ae-0000-0004f18718bd,1648264,187,477158,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d42a-0001-82ae-0000-0004f18718a9,1205634,222,6909,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d42a-0001-82ae-0000-0004f18718a5,1198722,191,2397,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d42a-0001-82ae-0000-0004f18718a1,1196379,193,2037,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d42a-0001-82ad-0000-0004f1872865,1936640,219,752157,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ad-0000-0004f1872861,1204727,180,14188,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ad-0000-0004f187285d,1190551,187,2587,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ad-0000-0004f1872859,1188011,204,1648,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ae-0000-0004f187188d,1420214,194,391903,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ae-0000-0004f1871889,1028347,202,5901,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ae-0000-0004f1871885,1022464,128,2405,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ad-0000-0004f1872855,1022189,258,1249,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ad-0000-0004f1872851,35,25,10,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d429-0001-82ad-0000-0004f187284d,74100,153,72997,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ad-0000-0004f1872849,12647,160,7680,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ae-0000-0004f1871875,5941,132,4543,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ae-0000-0004f187186d,8755,133,8628,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ae-0000-0004f1871869,57229,140,57099,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ad-0000-0004f1872845,4617,216,4409,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ad-0000-0004f187283d,10378,470,3055,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ae-0000-0004f1871859,8584,156,1976,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ad-0000-0004f1872839,91884,177,91719,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ad-0000-0004f1872835,26202,365,25855,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ae-0000-0004f1871851,21181,289,20910,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ae-0000-0004f187184d,20901,342,20581,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ad-0000-0004f1872831,54327,896,53445,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ae-0000-0004f1871849,11598,569,10973,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ad-0000-0004f187282d,9484,703,8786,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ad-0000-0004f1872829,9073,863,8320,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ae-0000-0004f1871845,34,24,10,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d429-0001-82ae-0000-0004f1871841,442103,148,328512,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ad-0000-0004f1872825,113623,174,11487,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ad-0000-0004f1872821,102185,212,3020,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ae-0000-0004f187183d,99148,178,2563,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ae-0000-0004f1871839,317398,149,223527,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ad-0000-0004f187281d,96677,191,4999,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ad-0000-0004f1872819,93960,191,2416,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ae-0000-0004f1871835,91744,185,1843,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ad-0000-0004f1872815,417969,199,335208,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ad-0000-0004f1872811,91663,162,9861,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ae-0000-0004f1871831,82836,155,2690,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ae-0000-0004f187182d,80185,193,1669,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ad-0000-0004f187280d,214959,173,183608,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ad-0000-0004f1872809,31398,204,4481,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ae-0000-0004f1871829,26955,166,1716,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ae-0000-0004f1871825,25291,183,1602,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d429-0001-82ad-0000-0004f1872805,37,25,12,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d429-0001-82ad-0000-0004f1872801,1731920,178,806289,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d429-0001-82ae-0000-0004f1871821,925671,185,14846,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d429-0001-82ae-0000-0004f187181d,910858,186,2828,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d429-0001-82ae-0000-0004f1871819,908060,203,2409,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d426-0001-82ae-0000-0004f18717f5,1585509,302,473987,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d425-0001-82ad-0000-0004f18727d1,1128330,183,6746,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d425-0001-82ae-0000-0004f18717e5,1129957,209,2292,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d425-0001-82ad-0000-0004f18727bd,1151008,156,697,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d425-0001-82ae-0000-0004f18717d1,1891409,183,748402,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d425-0001-82ae-0000-0004f18717cd,1156591,185,14778,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d425-0001-82ad-0000-0004f18727b1,1141849,198,2001,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d425-0001-82ae-0000-0004f18717c9,1147028,167,2527,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d424-0001-82ae-0000-0004f18717c5,1526121,127,394742,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d424-0001-82ad-0000-0004f1872799,1134579,195,6576,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d424-0001-82ae-0000-0004f18717c1,1129129,178,2103,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d424-0001-82ad-0000-0004f1872789,1129149,191,1370,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d424-0001-82ad-0000-0004f1872785,36,25,11,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d424-0001-82ae-0000-0004f18717bd,60434,181,60265,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d424-0001-82ad-0000-0004f187277d,6445,143,6316,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d424-0001-82ae-0000-0004f18717b5,2624,166,2468,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d424-0001-82ad-0000-0004f1872775,2389,167,2230,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d424-0001-82ae-0000-0004f18717b1,47089,152,46949,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d424-0001-82ae-0000-0004f18717ad,4143,132,4017,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d424-0001-82ae-0000-0004f18717a9,2724,158,2572,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d424-0001-82ad-0000-0004f187276d,2079,166,1923,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d424-0001-82ad-0000-0004f1872761,67295,194,67117,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d424-0001-82ad-0000-0004f187275d,3746,183,3573,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d424-0001-82ae-0000-0004f187179d,1346,172,1180,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d424-0001-82ae-0000-0004f1871795,999,162,845,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d424-0001-82ad-0000-0004f1872759,32409,172,32251,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d424-0001-82ae-0000-0004f187178d,1948,168,1786,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d424-0001-82ae-0000-0004f1871785,734,172,566,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d424-0001-82ad-0000-0004f1872755,690,196,506,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d424-0001-82ae-0000-0004f1871781,43,30,13,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d424-0001-82ae-0000-0004f1871775,703188,188,374451,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d424-0001-82ad-0000-0004f1872739,335006,167,11193,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d424-0001-82ae-0000-0004f1871769,329010,168,1775,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d424-0001-82ad-0000-0004f1872735,327272,154,2641,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d424-0001-82ad-0000-0004f1872731,485030,208,225669,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d423-0001-82ad-0000-0004f187272d,268618,203,4601,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d423-0001-82ae-0000-0004f1871759,264044,258,1696,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d423-0001-82ad-0000-0004f1872729,262326,227,1813,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d423-0001-82ae-0000-0004f187174d,625377,160,370065,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d423-0001-82ae-0000-0004f1871745,258430,173,10873,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d423-0001-82ad-0000-0004f1872719,248652,136,2973,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d423-0001-82ae-0000-0004f1871741,245733,172,2288,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d423-0001-82ad-0000-0004f1872715,430592,170,193306,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d423-0001-82ae-0000-0004f187173d,237323,163,4498,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d423-0001-82ae-0000-0004f1871739,232862,160,1987,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d423-0001-82ad-0000-0004f1872711,230930,181,1847,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d423-0001-82ae-0000-0004f1871735,36,26,10,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d423-0001-82ae-0000-0004f187172d,1944677,179,811624,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d423-0001-82ae-0000-0004f1871729,1136143,161,15601,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d423-0001-82ae-0000-0004f1871725,1122701,263,2846,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d423-0001-82ad-0000-0004f18726f5,1119804,173,1644,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d423-0001-82ad-0000-0004f18726f1,1413120,198,474821,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d423-0001-82ad-0000-0004f18726ed,938322,184,7046,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d423-0001-82ae-0000-0004f187171d,934399,214,2350,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d422-0001-82ae-0000-0004f1871711,957400,189,2186,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d422-0001-82ae-0000-0004f187170d,1639988,228,733538,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d422-0001-82ad-0000-0004f18726e1,906481,177,14385,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d422-0001-82ad-0000-0004f18726dd,897289,200,2125,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d422-0001-82ae-0000-0004f18716fd,896240,194,2772,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d422-0001-82ad-0000-0004f18726d9,1291981,162,399172,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d422-0001-82ad-0000-0004f18726d5,893568,201,6470,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d422-0001-82ae-0000-0004f18716f1,900381,176,2155,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d422-0001-82ad-0000-0004f18726cd,898263,211,1239,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d422-0001-82ae-0000-0004f18716ed,38,27,11,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d422-0001-82ad-0000-0004f18726c9,63897,194,63715,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d422-0001-82ad-0000-0004f18726c5,6957,193,6780,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d422-0001-82ad-0000-0004f18726c1,2506,185,2331,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d422-0001-82ad-0000-0004f18726bd,2035,149,1896,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d422-0001-82ae-0000-0004f18716e1,47524,181,47353,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d422-0001-82ae-0000-0004f18716dd,2989,175,2822,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d422-0001-82ae-0000-0004f18716d5,1729,174,1563,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d422-0001-82ae-0000-0004f18716cd,1695,177,1526,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d422-0001-82ae-0000-0004f18716c9,69310,174,69146,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d422-0001-82ad-0000-0004f18726b5,5330,182,5156,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d422-0001-82ae-0000-0004f18716c5,2073,179,1902,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d422-0001-82ae-0000-0004f18716bd,1983,171,1818,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d422-0001-82ae-0000-0004f18716b9,35097,180,34929,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d422-0001-82ad-0000-0004f18726ad,2510,203,2321,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d422-0001-82ae-0000-0004f18716b5,1332,171,1167,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d422-0001-82ae-0000-0004f18716b1,1679,219,1478,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d422-0001-82ae-0000-0004f18716ad,38,28,10,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d421-0001-82ad-0000-0004f1872691,709461,154,390922,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d421-0001-82ae-0000-0004f1871695,318577,165,11557,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d421-0001-82ad-0000-0004f187268d,319349,205,2890,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d421-0001-82ad-0000-0004f1872689,316489,204,2871,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d421-0001-82ae-0000-0004f1871681,509116,203,228195,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d421-0001-82ae-0000-0004f187167d,280967,212,5657,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d421-0001-82ad-0000-0004f187267d,289630,213,2374,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d420-0001-82ae-0000-0004f1871669,302593,231,1145,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d420-0001-82ad-0000-0004f1872669,611103,205,366611,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d420-0001-82ae-0000-0004f1871665,252761,202,9759,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d420-0001-82ae-0000-0004f1871661,244083,185,2818,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d420-0001-82ae-0000-0004f187165d,241295,184,2387,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d420-0001-82ad-0000-0004f1872659,421877,158,187789,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d420-0001-82ad-0000-0004f1872655,234134,197,4569,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d420-0001-82ae-0000-0004f1871659,234911,144,1681,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d420-0001-82ad-0000-0004f1872645,236889,224,1887,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d420-0001-82ae-0000-0004f1871655,35,24,11,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d420-0001-82ad-0000-0004f1872641,1749925,152,808165,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d420-0001-82ae-0000-0004f187164d,941796,213,15707,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d420-0001-82ad-0000-0004f187263d,926089,192,2642,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d420-0001-82ad-0000-0004f1872635,925507,222,2540,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d420-0001-82ae-0000-0004f1871649,1391926,204,471278,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d420-0001-82ad-0000-0004f1872631,923736,213,7282,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d420-0001-82ad-0000-0004f1872625,922722,186,1800,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d420-0001-82ad-0000-0004f1872621,920959,183,1153,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d420-0001-82ae-0000-0004f1871639,1458463,207,738075,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d420-0001-82ad-0000-0004f1872619,720443,152,14908,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d420-0001-82ae-0000-0004f1871635,705572,219,2594,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d420-0001-82ae-0000-0004f1871631,703004,193,2494,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d420-0001-82ad-0000-0004f1872611,1042863,178,391292,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d420-0001-82ad-0000-0004f187260d,651617,199,6761,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d420-0001-82ae-0000-0004f1871625,645970,197,1999,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d420-0001-82ad-0000-0004f1872609,644007,183,1339,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d420-0001-82ad-0000-0004f1872605,44,32,12,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d41f-0001-82ae-0000-0004f1871619,161870,169,90877,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41f-0001-82ad-0000-0004f18725f9,71048,176,9822,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41f-0001-82ad-0000-0004f18725f1,65423,193,2468,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41f-0001-82ae-0000-0004f1871611,65074,175,2739,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41f-0001-82ae-0000-0004f187160d,141398,188,80535,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41f-0001-82ae-0000-0004f1871605,65564,187,3630,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41f-0001-82ae-0000-0004f18715fd,65213,169,2120,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41f-0001-82ae-0000-0004f18715f5,65199,183,2169,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41f-0001-82ad-0000-0004f18725d1,188781,162,107970,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41e-0001-82ad-0000-0004f18725cd,84598,159,8359,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41e-0001-82ad-0000-0004f18725c9,76297,187,2464,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41e-0001-82ae-0000-0004f18715e1,75924,148,2517,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41e-0001-82ad-0000-0004f18725c5,139740,182,89132,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41e-0001-82ae-0000-0004f18715d9,52730,177,3914,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41e-0001-82ad-0000-0004f18725c1,48851,189,1782,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41e-0001-82ad-0000-0004f18725bd,47112,182,1641,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41e-0001-82ae-0000-0004f18715d5,41,29,12,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d41e-0001-82ae-0000-0004f18715c9,753018,201,396491,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41e-0001-82ae-0000-0004f18715c1,366897,174,11853,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41e-0001-82ad-0000-0004f1872589,355084,302,3376,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41e-0001-82ae-0000-0004f18715bd,351649,284,2497,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ae-0000-0004f18715b5,570858,204,227470,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ae-0000-0004f18715ad,354591,201,4507,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ad-0000-0004f187256d,357256,160,2154,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ae-0000-0004f18715a1,357437,145,1704,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ae-0000-0004f1871599,714707,145,360163,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ae-0000-0004f1871595,354573,158,9936,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ad-0000-0004f1872565,344652,152,2969,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ad-0000-0004f1872561,341722,151,2355,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ad-0000-0004f187255d,502238,152,186984,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ae-0000-0004f1871591,315302,158,4151,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ad-0000-0004f1872559,317665,170,2083,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ae-0000-0004f1871581,317677,181,1766,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ad-0000-0004f1872555,37,26,11,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d41d-0001-82ad-0000-0004f1872551,1601018,185,809362,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ae-0000-0004f187157d,791686,181,15426,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ae-0000-0004f1871579,776285,151,3029,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ae-0000-0004f1871575,775412,155,2761,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ae-0000-0004f1871571,1216164,166,463214,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ae-0000-0004f187156d,752978,135,7233,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ae-0000-0004f1871569,745788,160,2055,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ad-0000-0004f1872541,743765,199,1122,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ad-0000-0004f187253d,1476806,147,739504,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ad-0000-0004f1872535,744772,151,14708,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ae-0000-0004f1871565,730115,174,2556,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ae-0000-0004f1871561,727659,201,2485,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ae-0000-0004f187155d,1101987,162,380084,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ad-0000-0004f187252d,727282,154,7362,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ad-0000-0004f1872529,721981,167,2042,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ad-0000-0004f1872525,719993,160,909,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ae-0000-0004f1871559,33,25,8,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d41d-0001-82ae-0000-0004f1871555,288679,195,148019,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ad-0000-0004f1872521,140712,184,10100,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ae-0000-0004f187154d,132734,159,2864,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ae-0000-0004f1871549,130244,187,2692,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ae-0000-0004f1871545,220214,157,111442,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ad-0000-0004f187251d,108828,147,3751,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ae-0000-0004f1871541,105118,162,1988,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ad-0000-0004f1872519,103163,160,1936,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ae-0000-0004f187153d,261698,188,168623,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ad-0000-0004f1872515,101319,173,8789,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ad-0000-0004f1872511,93169,185,3145,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ad-0000-0004f1872509,95692,161,2630,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ad-0000-0004f1872505,152136,141,90417,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41d-0001-82ae-0000-0004f1871539,61760,180,4576,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41d-0001-82ae-0000-0004f1871535,57227,163,2345,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41d-0001-82ad-0000-0004f1872501,54923,144,1782,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41d-0001-82ae-0000-0004f1871531,43,33,10,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d41c-0001-82ad-0000-0004f18724f5,677509,167,400260,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41c-0001-82ad-0000-0004f18724f1,277287,186,12459,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41c-0001-82ae-0000-0004f1871529,264871,169,2749,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41c-0001-82ae-0000-0004f1871525,262160,157,2100,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41c-0001-82ad-0000-0004f18724ed,447982,137,227173,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41c-0001-82ad-0000-0004f18724e9,220851,184,4829,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41c-0001-82ae-0000-0004f1871521,216027,155,1975,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41c-0001-82ae-0000-0004f187151d,214099,185,2136,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41c-0001-82ae-0000-0004f1871519,583901,174,369843,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41c-0001-82ad-0000-0004f18724e1,214085,187,10870,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41c-0001-82ad-0000-0004f18724dd,203239,137,2992,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41c-0001-82ad-0000-0004f18724d9,200284,144,2759,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41c-0001-82ad-0000-0004f18724d5,347074,168,184472,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41c-0001-82ae-0000-0004f1871515,162642,209,4694,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41c-0001-82ad-0000-0004f18724d1,157983,168,2291,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41c-0001-82ae-0000-0004f187150d,158802,180,1878,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41c-0001-82ad-0000-0004f18724cd,42,31,11,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d41c-0001-82ae-0000-0004f1871509,1315080,184,813050,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41c-0001-82ad-0000-0004f18724c5,504150,212,15681,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41c-0001-82ae-0000-0004f1871501,490545,214,2788,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41c-0001-82ae-0000-0004f18714fd,487769,157,2439,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41c-0001-82ad-0000-0004f18724c1,909154,228,473821,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41c-0001-82ad-0000-0004f18724b9,438406,186,7073,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41c-0001-82ae-0000-0004f18714f5,434501,200,1962,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41c-0001-82ad-0000-0004f18724b1,432575,159,1278,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41c-0001-82ad-0000-0004f18724ad,1150885,218,734042,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41c-0001-82ad-0000-0004f18724a9,416861,222,13804,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41c-0001-82ae-0000-0004f18714f1,403077,195,2840,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41c-0001-82ae-0000-0004f18714ed,400352,221,2811,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41c-0001-82ad-0000-0004f187249d,787722,159,400932,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41c-0001-82ad-0000-0004f1872499,387899,180,6491,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41c-0001-82ad-0000-0004f1872495,381444,191,1831,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41c-0001-82ad-0000-0004f1872491,382820,179,1351,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f187248d,33,23,10,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d41b-0001-82ad-0000-0004f1872489,305114,154,204120,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f18714b9,119288,152,8973,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f1872481,110337,138,2824,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f187247d,107549,145,2397,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f18714b5,220681,128,116124,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f18714b1,105243,129,3947,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f18714ad,101338,139,2140,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f1872479,99233,130,1619,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f1872475,283579,160,186507,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ad-0000-0004f1872471,104815,139,8147,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f18714a9,97764,133,3049,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f18714a5,96762,124,2808,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f18714a1,182855,126,92738,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ad-0000-0004f187246d,94040,127,4415,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f187149d,90208,139,1801,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f1872469,89734,155,1495,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f1872465,36,27,9,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d41b-0001-82ae-0000-0004f1871499,539290,138,409376,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f1871495,129950,131,11742,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f1872461,118251,139,3073,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f1871491,115215,152,2602,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f187245d,338540,161,227361,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f187148d,112669,150,4856,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f1872459,107846,150,2131,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f1872455,105744,184,2029,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f1871489,472130,158,368915,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f1871485,111418,135,10021,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f1871481,103842,156,2579,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f1872451,101278,157,2089,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f187244d,290637,141,193588,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ad-0000-0004f1872449,99280,136,4057,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f187147d,97138,128,2068,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f1871479,95318,143,1937,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f1871475,40,28,12,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d41b-0001-82ae-0000-0004f1871471,907787,154,794982,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f187146d,112833,142,16250,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f1872445,96606,133,2840,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f1872441,93800,140,2082,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f187243d,553452,171,462726,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f1871469,90745,186,7097,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f1871465,83650,177,2187,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f1871461,81497,141,2015,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f1872439,839792,159,760872,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ad-0000-0004f1872435,92025,172,13825,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f1872431,79606,173,2140,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f187145d,77494,147,2518,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f1871459,459366,145,390311,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ad-0000-0004f187242d,75060,149,6638,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f1871455,69130,135,2129,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f1872429,68509,190,1615,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f1871451,36,25,11,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d41b-0001-82ad-0000-0004f1872425,292959,160,202872,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f187144d,99457,133,9385,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f1871449,90284,120,10150,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f1872421,90571,271,11238,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f187241d,185113,286,108896,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ad-0000-0004f1872419,80276,198,4140,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f1871445,76199,183,3727,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f1871441,76178,186,3773,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f187143d,274616,496,212869,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ad-0000-0004f1872415,97397,6115,30017,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f1871439,90577,619,28580,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f1872411,90566,5979,23164,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f1871435,145390,484,83453,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ad-0000-0004f187240d,79700,6096,12163,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f1872409,72838,6022,5298,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f1871431,72769,703,10665,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f187142d,32,22,10,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d41b-0001-82ad-0000-0004f1872405,501006,129,405924,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f1871429,105565,122,10542,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f1872401,95413,162,13707,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f1871425,97229,187,17247,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f1871421,275268,166,197121,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f187141d,81861,261,4181,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f1871419,80072,224,2611,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f18723fd,77671,281,1636,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f18723f9,457197,6053,389009,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f1871415,104114,443,41445,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f18723f5,95469,6065,27174,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f18723f1,95626,6039,27300,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f1871411,231740,455,168924,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f187140d,78570,563,15702,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f18723ed,77749,6172,9349,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f18723e9,76286,6319,7743,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f18723e5,39,29,10,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d41b-0001-82ae-0000-0004f1871409,879734,157,811154,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f1871405,81248,142,14537,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ae-0000-0004f1871401,69055,192,18310,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f18723e1,66789,230,11594,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f18723dd,495729,175,445191,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f18713fd,55264,196,4721,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f18723d9,50614,194,1576,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f18713f9,50572,172,1600,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f18713f5,819673,743,778367,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ad-0000-0004f18723d5,80850,372,39893,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f18723d1,69303,413,28293,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ae-0000-0004f18713f1,69118,416,28003,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ae-0000-0004f18713ed,410109,446,368943,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d41b-0001-82ae-0000-0004f18713e9,51268,623,9921,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d41b-0001-82ad-0000-0004f18723cd,49432,675,8208,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d41b-0001-82ad-0000-0004f18723c9,49372,983,7847,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d41b-0001-82ad-0000-0004f18723c5,49,39,10,0,LARGE_TEST_WH,use warehouse SMALL_TEST_WH
01a7d3fb-0001-82ad-0000-0004f18723ad,807,564,332,100,SMALL_TEST_WH,"select *
from table(information_schema.query_history(result_limit => 100))
order by start_time desc;"
01a7d3dc-0001-82ae-0000-0004f18713d1,118,33,85,0,,"alter WAREHOUSE IDENTIFIER('""SMALL_TEST_WH""') set COMMENT = '' WAREHOUSE_SIZE = 'Small' AUTO_SUSPEND = 60 AUTO_RESUME = true ENABLE_QUERY_ACCELERATION = false MIN_CLUSTER_COUNT = 1 MAX_CLUSTER_COUNT = 1 SCALING_POLICY = 'STANDARD'"
01a7d3dc-0001-82ad-0000-0004f18723a5,103,26,77,0,,"alter WAREHOUSE IDENTIFIER('""MEDIUM_TEST_WH""') set COMMENT = '' WAREHOUSE_SIZE = 'Medium' AUTO_SUSPEND = 60 AUTO_RESUME = true ENABLE_QUERY_ACCELERATION = false MIN_CLUSTER_COUNT = 1 MAX_CLUSTER_COUNT = 1 SCALING_POLICY = 'STANDARD'"
01a7d3dc-0001-82ad-0000-0004f187239d,103,28,75,0,,"alter WAREHOUSE IDENTIFIER('""LARGE_TEST_WH""') set COMMENT = '' WAREHOUSE_SIZE = 'Large' AUTO_SUSPEND = 60 AUTO_RESUME = true ENABLE_QUERY_ACCELERATION = false MIN_CLUSTER_COUNT = 1 MAX_CLUSTER_COUNT = 1 SCALING_POLICY = 'STANDARD'"
01a7d3dc-0001-82ad-0000-0004f1872399,101,26,75,0,,"alter WAREHOUSE IDENTIFIER('""COMPUTE_WH""') set COMMENT = '' WAREHOUSE_SIZE = 'X-Small' AUTO_SUSPEND = 60 AUTO_RESUME = true ENABLE_QUERY_ACCELERATION = false MIN_CLUSTER_COUNT = 1 MAX_CLUSTER_COUNT = 1 SCALING_POLICY = 'STANDARD'"
01a7d3da-0001-82ad-0000-0004f1872375,376,82,309,243,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 1000)) order by start_time desc"
01a7d3da-0001-82ad-0000-0004f1872371,433,91,354,242,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, compilation_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 1000)) order by start_time desc"
01a7d3d4-0001-82ae-0000-0004f1871375,93044,216,80555,100000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ad-0000-0004f1872359,35854,491,7915,1000000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ad-0000-0004f1872355,30750,600,2681,10000,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ae-0000-0004f1871371,28236,216,17287,100,LARGE_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ae-0000-0004f187136d,62381,312,52197,100000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ae-0000-0004f1871369,12656,304,3978,1000000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ae-0000-0004f1871365,10138,177,1572,10000,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ad-0000-0004f1872351,8564,209,8373,100,LARGE_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ae-0000-0004f1871361,91950,260,91716,100000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ae-0000-0004f187135d,35021,626,34417,1000000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ad-0000-0004f187234d,28386,376,28042,10000,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ad-0000-0004f1872349,28519,576,18806,100,LARGE_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ad-0000-0004f1872345,52056,639,51441,100000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ae-0000-0004f1871359,11367,529,10707,1000000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ae-0000-0004f1871355,9755,434,9217,10000,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ae-0000-0004f1871351,9016,962,8110,100,LARGE_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ad-0000-0004f1872341,36,25,11,0,MEDIUM_TEST_WH,use warehouse LARGE_TEST_WH
01a7d3d4-0001-82ad-0000-0004f187233d,169335,402,144429,100000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ad-0000-0004f1872339,35843,392,11136,1000000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ae-0000-0004f187134d,28025,155,6869,10000,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ae-0000-0004f1871349,28037,121,9210,100,MEDIUM_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ad-0000-0004f1872335,129474,182,109930,100000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ae-0000-0004f1871345,25146,159,24997,1000000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ae-0000-0004f1871341,19977,585,19398,10000,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ad-0000-0004f1872331,19682,401,19289,100,MEDIUM_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ad-0000-0004f187232d,165001,386,144134,100000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ae-0000-0004f187133d,29602,277,29333,1000000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ad-0000-0004f1872329,21547,476,1364,10000,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ae-0000-0004f1871339,21010,396,20632,100,MEDIUM_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ad-0000-0004f1872325,113739,657,102741,100000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ae-0000-0004f1871335,25305,528,24818,1000000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ad-0000-0004f1872321,11021,639,10487,10000,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ad-0000-0004f187231d,19429,835,18618,100,MEDIUM_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ad-0000-0004f1872319,36,25,11,0,SMALL_TEST_WH,use warehouse MEDIUM_TEST_WH
01a7d3d4-0001-82ae-0000-0004f1871331,297133,229,273694,100000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ae-0000-0004f187132d,35827,181,25349,1000000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ad-0000-0004f1872315,28228,530,2804,10000,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ae-0000-0004f1871329,25464,190,17328,100,SMALL_TEST_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ad-0000-0004f1872311,213361,415,199390,100000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ad-0000-0004f187230d,13972,356,3913,1000000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ae-0000-0004f1871325,10087,237,1844,10000,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ae-0000-0004f1871321,8331,197,8146,100,SMALL_TEST_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ae-0000-0004f187131d,292380,146,292248,100000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ad-0000-0004f1872309,34907,324,34609,1000000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ad-0000-0004f1872305,25961,355,21184,10000,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ad-0000-0004f1872301,23986,736,23272,100,SMALL_TEST_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ae-0000-0004f1871319,171692,201,171515,100000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3d4-0001-82ae-0000-0004f1871315,11081,320,10769,1000000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3d4-0001-82ae-0000-0004f1871311,5007,289,4734,10000,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3d4-0001-82ad-0000-0004f18722fd,8691,645,8056,100,SMALL_TEST_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3d4-0001-82ad-0000-0004f18722f9,59,47,12,0,COMPUTE_WH,use warehouse SMALL_TEST_WH
01a7d3d3-0001-82ad-0000-0004f18722f5,417,91,338,190,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 1000)) order by start_time desc"
01a7d3d2-0001-82ad-0000-0004f18722f1,599,194,425,189,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, rows_produced, warehouse_name, query_text from table(information_schema.query_history(result_limit => 1000)) order by start_time desc"
01a7d3cd-0001-82ae-0000-0004f1871309,573,402,277,100,SMALL_TEST_WH,"select *
from table(information_schema.query_history(result_limit => 100))
order by start_time desc;"
01a7d3cc-0001-82ad-0000-0004f18722d9,428,81,355,187,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, query_text from table(information_schema.query_history(result_limit => 1000)) order by start_time desc"
01a7d3cc-0001-82ad-0000-0004f18722d1,2019,658,1391,1,COMPUTE_WH,"with active_contracts as (
  select contract_number, max(expiration_date) t1, max(end_date) t2
  from SNOWFLAKE.ORGANIZATION_USAGE.CONTRACT_ITEMS
  group by contract_number
  having t1 >= current_date() or (t2 > current_date() and t1 is null)
),
capacity_balances as (
select 
  contract_number, 
  date,
  capacity_balance,
  row_number() over (partition by contract_number order by date desc) as row_num,
  currency
from SNOWFLAKE.ORGANIZATION_USAGE.REMAINING_BALANCE_DAILY
where contract_number in (select contract_number from active_contracts)
)
select sum(capacity_balance) as balance, any_value(currency) as currency
from capacity_balances
where row_num = 1;"
01a7d3ca-0001-82ae-0000-0004f18712cd,118,44,74,0,MEDIUM_TEST_WH,create warehouse small_test_wh warehouse_size = 'small';
01a7d3c7-0001-82ae-0000-0004f18712c5,596,401,314,100,MEDIUM_TEST_WH,"select *
from table(information_schema.query_history(result_limit => 100))
order by start_time desc;"
01a7d3c6-0001-82ae-0000-0004f18712b5,110,31,79,0,LARGE_TEST_WH,create warehouse medium_test_wh warehouse_size = 'medium';
01a7d3c6-0001-82ad-0000-0004f1872291,100,30,70,0,COMPUTE_WH,create warehouse large_test_wh warehouse_size = 'large';
01a7d3c6-0001-82ad-0000-0004f187228d,29,29,0,0,,create warehouse large_test_wh set warehouse_size = 'large';
01a7d3c2-0001-82ae-0000-0004f1871279,564648,184,558650,100000000,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3c2-0001-82ad-0000-0004f187225d,22766,150,18091,1000000,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3c2-0001-82ae-0000-0004f1871275,6055,130,3057,10000,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c2-0001-82ad-0000-0004f1872259,4755,180,2374,100,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3c2-0001-82ae-0000-0004f1871271,403385,196,401291,100000000,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3c2-0001-82ad-0000-0004f1872255,11844,178,9796,1000000,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3c2-0001-82ad-0000-0004f1872251,3189,160,2559,10000,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c2-0001-82ae-0000-0004f187126d,2207,144,1715,100,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3c2-0001-82ae-0000-0004f1871269,549521,460,549073,100000000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3c2-0001-82ad-0000-0004f187224d,18320,304,18032,1000000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3c2-0001-82ae-0000-0004f1871265,2261,227,2044,10000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c2-0001-82ad-0000-0004f1872249,2805,181,2634,100,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3c2-0001-82ae-0000-0004f1871261,329725,154,329583,100000000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3c2-0001-82ad-0000-0004f1872245,7061,154,6917,1000000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3c2-0001-82ae-0000-0004f187125d,1055,148,915,10000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c2-0001-82ad-0000-0004f1872241,939,185,770,100,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3c2-0001-82ae-0000-0004f1871259,1802,160,1650,10000,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c2-0001-82ad-0000-0004f1872239,1796,146,1658,100,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3c2-0001-82ad-0000-0004f1872235,1408,182,1236,10000,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c2-0001-82ae-0000-0004f1871255,1609,162,1455,100,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3c2-0001-82ae-0000-0004f1871251,2057,162,1901,10000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c2-0001-82ae-0000-0004f187124d,1973,196,1785,100,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3c2-0001-82ad-0000-0004f1872231,1247,175,1086,10000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c2-0001-82ad-0000-0004f187222d,1074,202,888,100,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3c1-0001-82ad-0000-0004f1872229,2227,139,2096,10000,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c1-0001-82ae-0000-0004f1871249,2164,428,1742,100,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3c1-0001-82ad-0000-0004f1872225,1904,518,1394,10000,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c1-0001-82ae-0000-0004f1871245,1844,156,1694,100,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3c1-0001-82ad-0000-0004f1872221,1334,170,1172,10000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c1-0001-82ae-0000-0004f1871241,2255,155,2106,100,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3c1-0001-82ad-0000-0004f187221d,1110,169,949,10000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3c1-0001-82ae-0000-0004f187123d,1166,202,976,100,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3b5-0001-82ae-0000-0004f1871235,570223,182,564373,100000000,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3b5-0001-82ae-0000-0004f1871231,23648,229,18146,1000000,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3b5-0001-82ad-0000-0004f187220d,5906,187,3066,10000,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3b5-0001-82ad-0000-0004f1872209,5523,203,2676,100,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3b5-0001-82ad-0000-0004f1872205,408190,187,406509,100000000,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3b5-0001-82ae-0000-0004f187122d,10473,150,9452,1000000,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3b5-0001-82ae-0000-0004f1871229,2963,159,2080,10000,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3b5-0001-82ae-0000-0004f1871225,3076,198,2572,100,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3b5-0001-82ad-0000-0004f1872201,556083,460,555637,100000000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3b5-0001-82ad-0000-0004f18721fd,19395,641,18766,1000000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3b5-0001-82ad-0000-0004f18721f9,1965,161,1812,10000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3b5-0001-82ae-0000-0004f1871221,1325,156,1177,100,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3b5-0001-82ad-0000-0004f18721f5,346430,165,346281,100000000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3b5-0001-82ad-0000-0004f18721f1,10513,203,10318,1000000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3b5-0001-82ae-0000-0004f187121d,874,183,697,10000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3b5-0001-82ad-0000-0004f18721ed,1371,216,1169,100,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3b3-0001-82ae-0000-0004f1871219,45072,171,44911,44275200,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3b3-0001-82ad-0000-0004f18721e9,2868,165,2717,1000000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3b3-0001-82ad-0000-0004f18721e5,1789,189,1608,1000000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3b3-0001-82ad-0000-0004f18721e1,810,157,661,10000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3b3-0001-82ae-0000-0004f1871215,793,186,613,10000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3b3-0001-82ad-0000-0004f18721dd,681,192,497,100,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3b3-0001-82ad-0000-0004f18721d9,668,206,476,100,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3b1-0001-82ad-0000-0004f18721d5,90574,161,90427,54792000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3b1-0001-82ad-0000-0004f18721d1,3215,200,3027,1000000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3b1-0001-82ae-0000-0004f1871211,1067,205,870,10000,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000
01a7d3b1-0001-82ae-0000-0004f187120d,992,223,777,100,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100
01a7d3b0-0001-82ad-0000-0004f18721c5,88995,187,88822,100000000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000
01a7d3b0-0001-82ae-0000-0004f18711e1,1732,182,1556,1000000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000
01a7d3b0-0001-82ad-0000-0004f18721c1,757,211,554,10000,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000
01a7d3b0-0001-82ae-0000-0004f18711dd,640,173,477,100,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100
01a7d3ad-0001-82ae-0000-0004f18711d9,488,89,409,100,COMPUTE_WH,"select *
from table(information_schema.query_history(result_limit => 100))
order by start_time desc;"
01a7d3ab-0001-82ad-0000-0004f18721ad,386,82,316,116,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, query_text from table(information_schema.query_history(result_limit => 1000)) order by start_time desc"
01a7d3aa-0001-82ae-0000-0004f18711c1,968,157,819,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100000000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ad-0000-0004f18721a9,924,145,789,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 1000000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ad-0000-0004f18721a5,926,152,784,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ae-0000-0004f18711bd,940,146,800,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ae-0000-0004f18711b9,598,148,458,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100000000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ad-0000-0004f18721a1,609,151,464,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 1000000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ad-0000-0004f187219d,660,204,466,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ae-0000-0004f18711b5,637,184,459,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ae-0000-0004f18711b1,918,166,760,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100000000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ad-0000-0004f1872199,940,181,767,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 1000000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ad-0000-0004f1872195,1011,192,827,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ae-0000-0004f18711ad,959,186,781,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ad-0000-0004f1872191,668,205,471,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100000000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ae-0000-0004f18711a9,629,174,461,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple(*) from demodb.udf_testing.udf_test limit 1000000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ae-0000-0004f18711a5,947,522,447,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000) LIMIT 1 OFFSET 0
01a7d3aa-0001-82ad-0000-0004f187218d,1427,698,829,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100) LIMIT 1 OFFSET 0
01a7d39e-0001-82ad-0000-0004f1872189,381,64,321,99,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, query_text from table(information_schema.query_history(result_limit => 1000)) order by start_time desc"
01a7d39d-0001-82ae-0000-0004f18711a1,945,154,799,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10000) LIMIT 1 OFFSET 0
01a7d39d-0001-82ae-0000-0004f187119d,969,170,805,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 100) LIMIT 1 OFFSET 0
01a7d39d-0001-82ad-0000-0004f1872185,691,217,482,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10000) LIMIT 1 OFFSET 0
01a7d39d-0001-82ae-0000-0004f1871199,633,149,488,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 100) LIMIT 1 OFFSET 0
01a7d39d-0001-82ae-0000-0004f1871195,936,177,767,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10000) LIMIT 1 OFFSET 0
01a7d39d-0001-82ae-0000-0004f1871191,899,153,752,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 100) LIMIT 1 OFFSET 0
01a7d39d-0001-82ae-0000-0004f187118d,652,209,449,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10000) LIMIT 1 OFFSET 0
01a7d39d-0001-82ad-0000-0004f1872181,663,203,474,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple(*) from demodb.udf_testing.udf_test limit 100) LIMIT 1 OFFSET 0
01a7d399-0001-82ad-0000-0004f187217d,345,81,274,90,COMPUTE_WH,"select query_id, total_elapsed_time, compilation_time, execution_time, query_text from table(information_schema.query_history(result_limit => 1000)) order by start_time desc"
01a7d398-0001-82ad-0000-0004f1872179,3215,188,3037,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10) LIMIT 1 OFFSET 0
01a7d398-0001-82ad-0000-0004f1872175,723,181,550,1,COMPUTE_WH,SELECT  *  FROM ( select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10) LIMIT 1 OFFSET 0
01a7d398-0001-82ad-0000-0004f1872171,10443,250,10209,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10) LIMIT 1 OFFSET 0
01a7d398-0001-82ae-0000-0004f1871189,632,214,432,1,COMPUTE_WH,SELECT  *  FROM ( select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10) LIMIT 1 OFFSET 0
01a7d398-0001-82ad-0000-0004f187216d,43,43,0,0,,SELECT  *  FROM ( select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10;) LIMIT 1 OFFSET 0
01a7d395-0001-82ad-0000-0004f1872169,655,202,469,10,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10;
01a7d392-0001-82ad-0000-0004f1872165,725,307,466,10,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10;
01a7d392-0001-82ae-0000-0004f1871185,5532,350,5206,10,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10;
01a7d38b-0001-82ae-0000-0004f1871181,328,93,244,1,COMPUTE_WH,"SELECT  *  FROM ( select query_id, total_elapsed_time, compilation_time, execution_time, query_text from table(information_schema.query_history(result_limit => 100)) order by start_time desc ) WHERE (""QUERY_ID"" = '01a7d374-0001-82ad-0000-0004f1872155')"
01a7d386-0001-82ae-0000-0004f1871175,338,71,274,1,COMPUTE_WH,"SELECT  *  FROM ( SELECT  *  FROM ( select query_id, total_elapsed_time, compilation_time, execution_time, query_text from table(information_schema.query_history(result_limit => 100)) order by start_time desc ) WHERE (""QUERY_ID"" = '01a7d374-0001-82ad-0000-0004f1872155')) LIMIT 10 OFFSET 0"
01a7d385-0001-82ad-0000-0004f1872161,554,313,277,1,COMPUTE_WH,"SELECT  *  FROM ( select query_id, total_elapsed_time, compilation_time, execution_time, query_text from table(information_schema.query_history(result_limit => 100)) order by start_time desc ) WHERE (""QUERY_ID"" = '01a7d374-0001-82ad-0000-0004f1872155')"
01a7d384-0001-82ae-0000-0004f1871169,688,485,309,0,COMPUTE_WH,"SELECT  *  FROM ( select total_elapsed_time, compilation_time, execution_time, query_text from table(information_schema.query_history(result_limit => 100)) order by start_time desc ) WHERE (""QUERY_TEXT"" = '01a7d374-0001-82ad-0000-0004f1872155')"
01a7d376-0001-82ae-0000-0004f1871161,493,113,388,77,COMPUTE_WH,select * from table(information_schema.query_history(result_limit => 100)) order by start_time desc
01a7d374-0001-82ae-0000-0004f1871159,547,283,277,10,COMPUTE_WH,"select *
from table(information_schema.query_history(result_limit => 10))
order by start_time desc;"
01a7d374-0001-82ad-0000-0004f1872155,305,95,222,10,COMPUTE_WH,"select *
from table(information_schema.query_history(result_limit => 10))
order by start_time asc;"
01a7d374-0001-82ad-0000-0004f1872145,341,118,227,10,COMPUTE_WH,"select *
from table(information_schema.query_history(result_limit => 10))
order by start_time;"
01a7d374-0001-82ad-0000-0004f1872141,913,952,255,10,COMPUTE_WH,SELECT  *  FROM ( select * from demodb.udf_testing.udf_test ) LIMIT 10 OFFSET 0
01a7d373-0001-82ae-0000-0004f1871139,73,73,0,0,,SELECT  *  FROM ( select * from demodb.udf_testing.udf_test;) LIMIT 10 OFFSET 0
01a7d2ca-0001-82ae-0000-0004f1871131,300,91,219,10,COMPUTE_WH,"select *
from table(information_schema.query_history(result_limit => 10))
order by start_time;"
01a7d2ca-0001-82ae-0000-0004f187112d,41,41,0,0,COMPUTE_WH,"select *
from table(information_schema.query_history(result_limit = 10))
order by start_time;"
01a7d2c9-0001-82ad-0000-0004f1872135,351,94,266,69,COMPUTE_WH,"select *
from table(information_schema.query_history())
order by start_time;"
01a7d2c8-0001-82ae-0000-0004f1871125,287,88,206,2,COMPUTE_WH,"select *
from table(information_schema.query_history_by_session())
order by start_time;"
01a7d2c8-0001-82ad-0000-0004f1872125,28,28,0,0,,show query_history;
01a7d2c6-0001-82ad-0000-0004f1872111,1062,404,692,10,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10;
01a7d2c6-0001-82ae-0000-0004f1871111,9137,205,8944,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION CALC_FAC_SIMPLE(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/ba9b168bc8a300ea332ceb5fb2006a1aae368657275dcd165af454287bf14398/calc_factorials_simple.py.zip')
PACKAGES=('cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059522020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b024b004b004b034b034b43430e74007c007c0183027d027c025300944e85948c1663616c635f666163746f7269616c735f73696d706c659485948c0141948c0142948c0d666163746f7269616c5f73756d9487948c41433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f32313734385c323531333536373036312e7079948c0a73665f63616c5f666163944b044304000a0a01942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681b7d947d9428681868128c0c5f5f7175616c6e616d655f5f9468128c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468198c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from calc_factorials_simple import calc_factorials_simple
# @udf(name = ""CALC_FAC_SIMPLE"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""calc_factorials_simple.py"", ""calc_factorials_simple"")],
#      session = session)
#
# def sf_cal_fac(A: float,
#                B: float) -> int:
#
#     factorial_sum = calc_factorials_simple(A, B)
#     return factorial_sum
#
# func = sf_cal_fac


from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(arg1,arg2):
    return lock_function_once(func, invoked)(arg1,arg2)
$$"
01a7d2c6-0001-82ae-0000-0004f187110d,66,30,36,0,COMPUTE_WH,PUT 'file:///tmp/placeholder/calc_factorials_simple.py.zip' '@snowpark_functions/ba9b168bc8a300ea332ceb5fb2006a1aae368657275dcd165af454287bf14398' PARALLEL = 4 AUTO_COMPRESS = FALSE SOURCE_COMPRESSION = DEFLATE OVERWRITE = TRUE
01a7d2c6-0001-82ae-0000-0004f1871109,596,534,174,6,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7d2c6-0001-82ad-0000-0004f187210d')))"
01a7d2c6-0001-82ad-0000-0004f187210d,102,45,57,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d2b8-0001-82ad-0000-0004f1872109,645,165,488,10,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b8-0001-82ae-0000-0004f1871105,2249,181,2074,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION CALC_FAC_SIMPLE(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/fed7eff320b46a9c40533fc9722f6558033e2bff7e2238cca0081395a7ad2713/calc_factorials_simple.py.zip')
PACKAGES=('cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059522020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b024b004b004b034b034b43430e74007c007c0183027d027c025300944e85948c1663616c635f666163746f7269616c735f73696d706c659485948c0141948c0142948c0d666163746f7269616c5f73756d9487948c41433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f32313734385c323531333536373036312e7079948c0a73665f63616c5f666163944b044304000a0a01942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681b7d947d9428681868128c0c5f5f7175616c6e616d655f5f9468128c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468198c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from calc_factorials_simple import calc_factorials_simple
# @udf(name = ""CALC_FAC_SIMPLE"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""calc_factorials_simple.py"", ""calc_factorials_simple"")],
#      session = session)
#
# def sf_cal_fac(A: float,
#                B: float) -> int:
#
#     factorial_sum = calc_factorials_simple(A, B)
#     return factorial_sum
#
# func = sf_cal_fac


from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(arg1,arg2):
    return lock_function_once(func, invoked)(arg1,arg2)
$$"
01a7d2b8-0001-82ae-0000-0004f1871101,65,28,37,0,COMPUTE_WH,PUT 'file:///tmp/placeholder/calc_factorials_simple.py.zip' '@snowpark_functions/fed7eff320b46a9c40533fc9722f6558033e2bff7e2238cca0081395a7ad2713' PARALLEL = 4 AUTO_COMPRESS = FALSE SOURCE_COMPRESSION = DEFLATE OVERWRITE = TRUE
01a7d2b8-0001-82ad-0000-0004f1872105,285,56,236,5,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7d2b8-0001-82ad-0000-0004f1872101')))"
01a7d2b8-0001-82ad-0000-0004f1872101,139,36,103,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d2b8-0001-82ae-0000-0004f18710fd,307,40,267,0,COMPUTE_WH,create stage if not exists snowpark_functions directory = (enable=true);
01a7d2b7-0001-82ad-0000-0004f18720fd,1130,309,831,10,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b7-0001-82ae-0000-0004f18710f9,3146,178,2974,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION CALC_FAC_VECTORIZED(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/e0b6e4365b80440d2bcf09e7419d273cca0e02a9bf40c56efd1cca165510266a/factorials_vectorized.py.zip')
PACKAGES=('pandas','numpy','scipy','cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059522020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b014b004b004b024b024b43430c74007c0083017d017c015300944e85948c15666163746f7269616c735f766563746f72697a65649485948c026466948c0e73756d5f666163746f7269616c739486948c41433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f32303238305c323133353231353637362e7079948c0f73665f6164645f726f77735f766563944b034304000b0802942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681a7d947d9428681768118c0c5f5f7175616c6e616d655f5f9468118c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468188c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from factorials_vectorized import factorials_vectorized
# @udf(name = ""CALC_FAC_VECTORIZED"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""factorials_vectorized.py"", ""factorials_vectorized"")],
#      packages = [""pandas"", ""numpy"", ""scipy""],
#      session = session,
#      max_batch_size = 1000000)
#
# def sf_add_rows_vec(df: PandasDataFrame[float, float]) -> PandasSeries[int]:
#
#     sum_factorials = factorials_vectorized(df)
#
#     return sum_factorials
#
# func = sf_add_rows_vec



from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(df):
    return lock_function_once(func, invoked)(df)


import pandas

compute._sf_vectorized_input = pandas.DataFrame
compute._sf_max_batch_size = 1000000
$$"
01a7d2b7-0001-82ad-0000-0004f18720f9,545,79,469,3,COMPUTE_WH,"SELECT ""PACKAGE_NAME"", array_agg(""VERSION"") AS ""ARRAY_AGG(VERSION)"" FROM ( SELECT  *  FROM ( SELECT  *  FROM (information_schema.packages)) WHERE ((""LANGUAGE"" = 'python') AND ""PACKAGE_NAME"" IN ('pandas', 'numpy', 'scipy'))) GROUP BY ""PACKAGE_NAME"""
01a7d2b7-0001-82ae-0000-0004f18710f1,228,64,172,5,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7d2b7-0001-82ae-0000-0004f18710ed')))"
01a7d2b7-0001-82ae-0000-0004f18710ed,81,28,53,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d2b7-0001-82ad-0000-0004f18720f5,901,188,727,0,COMPUTE_WH,select calc_fac_vectorized(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b6-0001-82ad-0000-0004f18720f1,29,29,0,0,COMPUTE_WH,select calc_fac_vecotrized(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b6-0001-82ae-0000-0004f18710e9,5379,168,5221,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION CALC_FAC_VECTORIZED(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/e0b6e4365b80440d2bcf09e7419d273cca0e02a9bf40c56efd1cca165510266a/factorials_vectorized.py.zip')
PACKAGES=('pandas','numpy','scipy','cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('8005952f020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b014b004b004b024b024b43430c74007c0083017d0174015300944e85948c15666163746f7269616c735f766563746f72697a6564948c0a73756d5f766563746f729486948c026466948c0e73756d5f666163746f7269616c739486948c41433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f32303238305c323734383532383337312e7079948c0f73665f6164645f726f77735f766563944b034304000b0802942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681b7d947d9428681868128c0c5f5f7175616c6e616d655f5f9468128c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468198c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from factorials_vectorized import factorials_vectorized
# @udf(name = ""CALC_FAC_VECTORIZED"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""factorials_vectorized.py"", ""factorials_vectorized"")],
#      packages = [""pandas"", ""numpy"", ""scipy""],
#      session = session,
#      max_batch_size = 1000000)
#
# def sf_add_rows_vec(df: PandasDataFrame[float, float]) -> PandasSeries[int]:
#
#     sum_factorials = factorials_vectorized(df)
#
#     return sum_vector
#
# func = sf_add_rows_vec



from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(df):
    return lock_function_once(func, invoked)(df)


import pandas

compute._sf_vectorized_input = pandas.DataFrame
compute._sf_max_batch_size = 1000000
$$"
01a7d2b6-0001-82ae-0000-0004f18710e5,517,67,447,3,COMPUTE_WH,"SELECT ""PACKAGE_NAME"", array_agg(""VERSION"") AS ""ARRAY_AGG(VERSION)"" FROM ( SELECT  *  FROM ( SELECT  *  FROM (information_schema.packages)) WHERE ((""LANGUAGE"" = 'python') AND ""PACKAGE_NAME"" IN ('pandas', 'numpy', 'scipy'))) GROUP BY ""PACKAGE_NAME"""
01a7d2b6-0001-82ae-0000-0004f18710dd,57,24,33,0,COMPUTE_WH,PUT 'file:///tmp/placeholder/factorials_vectorized.py.zip' '@snowpark_functions/e0b6e4365b80440d2bcf09e7419d273cca0e02a9bf40c56efd1cca165510266a' PARALLEL = 4 AUTO_COMPRESS = FALSE SOURCE_COMPRESSION = DEFLATE OVERWRITE = TRUE
01a7d2b6-0001-82ae-0000-0004f18710d9,236,63,182,4,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7d2b6-0001-82ae-0000-0004f18710d5')))"
01a7d2b6-0001-82ae-0000-0004f18710d5,87,31,56,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d2b6-0001-82ae-0000-0004f18710d1,634,151,489,10,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b6-0001-82ae-0000-0004f18710cd,2328,307,2029,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION CALC_FAC_SIMPLE(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/02ed94886e8e90e739cbf15ffc15e3e48fd8237553ca2540a2b2eb90a36cca6b/calc_factorials_simple.py.zip')
PACKAGES=('cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059522020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b024b004b004b034b034b43430e74007c007c0183027d027c025300944e85948c1663616c635f666163746f7269616c735f73696d706c659485948c0141948c0142948c0d666163746f7269616c5f73756d9487948c41433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f32303238305c323531333536373036312e7079948c0a73665f63616c5f666163944b044304000a0a01942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681b7d947d9428681868128c0c5f5f7175616c6e616d655f5f9468128c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468198c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from calc_factorials_simple import calc_factorials_simple
# @udf(name = ""CALC_FAC_SIMPLE"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""calc_factorials_simple.py"", ""calc_factorials_simple"")],
#      session = session)
#
# def sf_cal_fac(A: float,
#                B: float) -> int:
#
#     factorial_sum = calc_factorials_simple(A, B)
#     return factorial_sum
#
# func = sf_cal_fac


from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(arg1,arg2):
    return lock_function_once(func, invoked)(arg1,arg2)
$$"
01a7d2b6-0001-82ad-0000-0004f18720ed,63,26,37,0,COMPUTE_WH,PUT 'file:///tmp/placeholder/calc_factorials_simple.py.zip' '@snowpark_functions/02ed94886e8e90e739cbf15ffc15e3e48fd8237553ca2540a2b2eb90a36cca6b' PARALLEL = 4 AUTO_COMPRESS = FALSE SOURCE_COMPRESSION = DEFLATE OVERWRITE = TRUE
01a7d2b6-0001-82ae-0000-0004f18710c9,324,71,262,3,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7d2b6-0001-82ad-0000-0004f18720e9')))"
01a7d2b6-0001-82ad-0000-0004f18720e9,93,32,61,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d2b6-0001-82ad-0000-0004f18720e5,291,41,250,0,COMPUTE_WH,create stage if not exists snowpark_functions directory = (enable=true);
01a7d2b5-0001-82ae-0000-0004f18710c5,554,162,398,0,COMPUTE_WH,select calc_fac_simple(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b5-0001-82ad-0000-0004f18720e1,2316,200,2126,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION CALC_FAC_SIMPLE(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/a5668209c395a1275be9070d377ab64726c1207963a02bd42ae2d30c47bfa561/calc_factorials_simple.py.zip')
PACKAGES=('cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059521020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b024b004b004b034b034b43430e74007c007c0183027d027c025300944e85948c1663616c635f666163746f7269616c735f73696d706c659485948c0141948c0142948c0d666163746f7269616c5f73756d9487948c40433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f313632345c323531333536373036312e7079948c0a73665f63616c5f666163944b044304000a0a01942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681b7d947d9428681868128c0c5f5f7175616c6e616d655f5f9468128c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468198c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from calc_factorials_simple import calc_factorials_simple
# @udf(name = ""CALC_FAC_SIMPLE"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""calc_factorials_simple.py"", ""calc_factorials_simple"")],
#      session = session)
#
# def sf_cal_fac(A: float,
#                B: float) -> int:
#
#     factorial_sum = calc_factorials_simple(A, B)
#     return factorial_sum
#
# func = sf_cal_fac


from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(arg1,arg2):
    return lock_function_once(func, invoked)(arg1,arg2)
$$"
01a7d2b5-0001-82ad-0000-0004f18720dd,60,27,33,0,COMPUTE_WH,PUT 'file:///tmp/placeholder/calc_factorials_simple.py.zip' '@snowpark_functions/a5668209c395a1275be9070d377ab64726c1207963a02bd42ae2d30c47bfa561' PARALLEL = 4 AUTO_COMPRESS = FALSE SOURCE_COMPRESSION = DEFLATE OVERWRITE = TRUE
01a7d2b5-0001-82ae-0000-0004f18710c1,232,56,182,2,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7d2b5-0001-82ae-0000-0004f18710bd')))"
01a7d2b5-0001-82ae-0000-0004f18710bd,100,34,66,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d2b4-0001-82ad-0000-0004f18720d9,289,35,254,0,COMPUTE_WH,create stage if not exists snowpark_functions directory = (enable=true);
01a7d2b4-0001-82ad-0000-0004f18720d5,926,161,775,10,COMPUTE_WH,select add_rows_vectorized(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b4-0001-82ad-0000-0004f18720d1,2764,176,2596,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION ADD_ROWS_VECTORIZED(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/c728fe53309fb3dc2076369314390778b3c8ef1c741c2b4870025f407ad8f740/add_rows_vectorized.py.zip')
PACKAGES=('pandas','numpy','cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('8005951c020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b014b004b004b024b024b43430c74007c0083017d017c015300944e85948c136164645f726f77735f766563746f72697a65649485948c026466948c0a73756d5f766563746f729486948c41433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f31373935365c333233393037343637362e7079948c0f73665f6164645f726f77735f766563944b034304000b0802942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681a7d947d9428681768118c0c5f5f7175616c6e616d655f5f9468118c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468188c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from add_rows_vectorized import add_rows_vectorized
# @udf(name = ""ADD_ROWS_VECTORIZED"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""add_rows_vectorized.py"", ""add_rows_vectorized"")],
#      packages = [""pandas"", ""numpy""],
#      session = session,
#      max_batch_size = 1000000)
#
# def sf_add_rows_vec(df: PandasDataFrame[float, float]) -> PandasSeries[int]:
#
#     sum_vector = add_rows_vectorized(df)
#
#     return sum_vector
#
# func = sf_add_rows_vec



from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(df):
    return lock_function_once(func, invoked)(df)


import pandas

compute._sf_vectorized_input = pandas.DataFrame
compute._sf_max_batch_size = 1000000
$$"
01a7d2b4-0001-82ad-0000-0004f18720cd,596,74,520,2,COMPUTE_WH,"SELECT ""PACKAGE_NAME"", array_agg(""VERSION"") AS ""ARRAY_AGG(VERSION)"" FROM ( SELECT  *  FROM ( SELECT  *  FROM (information_schema.packages)) WHERE ((""LANGUAGE"" = 'python') AND ""PACKAGE_NAME"" IN ('pandas', 'numpy'))) GROUP BY ""PACKAGE_NAME"""
01a7d2b4-0001-82ad-0000-0004f18720c5,300,71,236,2,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7d2b4-0001-82ae-0000-0004f18710b9')))"
01a7d2b4-0001-82ae-0000-0004f18710b9,111,54,57,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d2b2-0001-82ad-0000-0004f18720b9,865,211,670,0,COMPUTE_WH,select demodb.udf_testing.ADD_ROWS_VECTORIZED(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b2-0001-82ad-0000-0004f18720b5,967,345,644,0,COMPUTE_WH,select ADD_ROWS_VECTORIZED(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b2-0001-82ae-0000-0004f18710ad,32,32,0,0,COMPUTE_WH,select add_rows_vecotrized(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b1-0001-82ae-0000-0004f18710a9,1067,243,832,10,COMPUTE_WH,select add_rows_simple(*) from demodb.udf_testing.udf_test limit 10;
01a7d2b1-0001-82ad-0000-0004f18720b1,2686,183,2513,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION ADD_ROWS_SIMPLE(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/cfeaa48bf3fcffc423df3c0209b1e9da19a9dc2e6624474ee18e0f2d9e2029c6/add_rows_simple.py.zip')
PACKAGES=('cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059516020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b024b004b004b034b034b43430e74007c007c0183027d027c025300944e85948c0f6164645f726f77735f73696d706c659485948c0141948c0142948c07726f775f73756d9487948c41433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f31373935365c323235323539333039302e7079948c0b73665f6164645f726f7773944b044304000a0a01942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681b7d947d9428681868128c0c5f5f7175616c6e616d655f5f9468128c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468198c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d94680b680b680b9394737586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# from add_rows_simple import add_rows_simple
# @udf(name = ""ADD_ROWS_SIMPLE"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""add_rows_simple.py"", ""add_rows_simple"")],
#      session = session)
#
# def sf_add_rows(A: float,
#                 B: float) -> int:
#
#     row_sum = add_rows_simple(A, B)
#     return row_sum
#
# func = sf_add_rows


from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(arg1,arg2):
    return lock_function_once(func, invoked)(arg1,arg2)
$$"
01a7d2b1-0001-82ad-0000-0004f18720ad,69,27,42,0,COMPUTE_WH,PUT 'file:///tmp/placeholder/add_rows_simple.py.zip' '@snowpark_functions/cfeaa48bf3fcffc423df3c0209b1e9da19a9dc2e6624474ee18e0f2d9e2029c6' PARALLEL = 4 AUTO_COMPRESS = FALSE SOURCE_COMPRESSION = DEFLATE OVERWRITE = TRUE
01a7d2b1-0001-82ad-0000-0004f18720a9,268,62,212,1,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7d2b1-0001-82ad-0000-0004f18720a5')))"
01a7d2b1-0001-82ad-0000-0004f18720a5,93,34,59,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d2b1-0001-82ae-0000-0004f18710a5,330,42,288,0,COMPUTE_WH,create stage if not exists snowpark_functions directory = (enable=true);
01a7d2af-0001-82ad-0000-0004f18720a1,16782,670,16140,0,COMPUTE_WH,"CREATE OR REPLACE 
 FUNCTION ADD_ROWS_VECTORIZED(arg1 FLOAT,arg2 FLOAT)
RETURNS BIGINT
LANGUAGE PYTHON
RUNTIME_VERSION=3.8
IMPORTS=('@snowpark_functions/c728fe53309fb3dc2076369314390778b3c8ef1c741c2b4870025f407ad8f740/add_rows_vectorized.py.zip')
PACKAGES=('pandas','numpy','cloudpickle==2.0.0')
HANDLER='compute'

AS $$
import pickle

func = pickle.loads(bytes.fromhex('80059512020000000000008c17636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b014b004b004b024b024b43430c74007c0083017d017c015300944e85948c136164645f726f77735f7665636f7472697a65649485948c026466948c0a73756d5f766563746f729486948c40433a5c55736572735c50726573746f6e5c417070446174615c4c6f63616c5c54656d705c6970796b65726e656c5f31323037325c3435383832313435352e7079948c0f73665f6164645f726f77735f766563944b034304000b0802942929749452947d94288c0b5f5f7061636b6167655f5f944e8c085f5f6e616d655f5f948c085f5f6d61696e5f5f94754e4e4e749452948c1c636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f7365747374617465949394681a7d947d9428681768118c0c5f5f7175616c6e616d655f5f9468118c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f9468188c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f944e8c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d947586948652302e'))
# The following comment contains the UDF source code generated by snowpark-python for explanatory purposes.
# @udf(name = ""ADD_ROWS_VECTORIZED"",
#      is_permanent = True,
#      stage_location = f""@{stage_name}"",
#      replace = True,
#      imports = [(""add_rows_vectorized.py"", ""add_rows_vectorized"")],
#      packages = [""pandas"", ""numpy""],
#      session = session,
#      max_batch_size = 1000000)
#
# def sf_add_rows_vec(df: PandasDataFrame[float, float]) -> PandasSeries[int]:
#
#     sum_vector = add_rows_vecotrized(df)
#
#     return sum_vector
#
# func = sf_add_rows_vec



from threading import RLock

lock = RLock()

class InvokedFlag:
    def __init__(self):
        self.invoked = False

def lock_function_once(f, flag):
    def wrapper(*args, **kwargs):
        if not flag.invoked:
            with lock:
                if not flag.invoked:
                    result = f(*args, **kwargs)
                    flag.invoked = True
                    return result
                return f(*args, **kwargs)
        return f(*args, **kwargs)
    return wrapper


invoked = InvokedFlag()

def compute(df):
    return lock_function_once(func, invoked)(df)


import pandas

compute._sf_vectorized_input = pandas.DataFrame
compute._sf_max_batch_size = 1000000
$$"
01a7d2af-0001-82ae-0000-0004f18710a1,540,70,471,2,COMPUTE_WH,"SELECT ""PACKAGE_NAME"", array_agg(""VERSION"") AS ""ARRAY_AGG(VERSION)"" FROM ( SELECT  *  FROM ( SELECT  *  FROM (information_schema.packages)) WHERE ((""LANGUAGE"" = 'python') AND ""PACKAGE_NAME"" IN ('pandas', 'numpy'))) GROUP BY ""PACKAGE_NAME"""
01a7d2af-0001-82ae-0000-0004f1871099,103,35,68,0,COMPUTE_WH,PUT 'file:///tmp/placeholder/add_rows_vectorized.py.zip' '@snowpark_functions/c728fe53309fb3dc2076369314390778b3c8ef1c741c2b4870025f407ad8f740' PARALLEL = 4 AUTO_COMPRESS = FALSE SOURCE_COMPRESSION = DEFLATE OVERWRITE = TRUE
01a7d2af-0001-82ae-0000-0004f1871095,611,662,50,0,COMPUTE_WH,"SELECT ""name"" FROM ( SELECT  *  FROM  TABLE ( RESULT_SCAN('01a7d2af-0001-82ae-0000-0004f1871091')))"
01a7d2af-0001-82ae-0000-0004f1871091,117,51,66,0,COMPUTE_WH,ls '@snowpark_functions'
01a7d2ac-0001-82ae-0000-0004f187108d,318,42,276,0,COMPUTE_WH,create stage if not exists snowpark_functions directory = (enable=true);
01a7d28e-0001-82ad-0000-0004f1872061,160,80,80,0,COMPUTE_WH,"create table if not exists demodb.udf_testing.UDF_TEST (A number , B number )"
01a7d28d-0001-82ad-0000-0004f187205d,58,58,0,0,,"create table if not exists demodb.udf_testing.UDF_TEST (0 number , 1 number )"
01a7cd63-0001-82ae-0000-0004f187104d,42,40,2,0,COMPUTE_WH,select system$cancel_all_queries(21232037909)
01a7cd59-0001-82ae-0000-0004f1871045,113,38,75,0,,create warehouse compute_wh;
01a7cd59-0001-82ad-0000-0004f1872055,65,40,25,0,,create schema demodb.udf_testing;
01a7cd59-0001-82ad-0000-0004f187204d,93,30,63,0,,create database demodb;
01a7cd57-0001-82ae-0000-0004f187102d,43,41,2,0,,SELECT SYSTEM$ANACONDA_TERMS('ACCEPT')
01a7cd53-0001-82ae-0000-0004f1871009,97,66,31,0,,GRANT IMPORTED PRIVILEGES ON DATABASE IDENTIFIER('snowflake_sample_data') TO ROLE public;
01a7cd53-0001-82ad-0000-0004f1872009,117,95,22,0,,GRANT ROLE IDENTIFIER('ORGADMIN') to user IDENTIFIER('FIRST_USER');
01a7cd53-0001-82ad-0000-0004f1872005,205,147,58,0,,CREATE OR REPLACE DATABASE IDENTIFIER('snowflake_sample_data') FROM SHARE IDENTIFIER('sfc_samples.sample_data') COMMENT=?
01a7cd53-0001-82ae-0000-0004f1871005,97,93,4,0,,select 1
